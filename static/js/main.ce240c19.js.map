{"version":3,"file":"static/js/main.ce240c19.js","mappings":"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QAAID,EAAOC,sDCJxF,MAAMnoD,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,qCCzFK,SAASzqD,EAAMhP,GAEpB,MAAMioH,EAAS,GACTrtB,EAAQ98E,OAAO9d,GAAS,IAC9B,IAAIU,EAAQk6F,EAAM34F,QAAQ,KACtBua,EAAQ,EAERnT,GAAM,EAEV,MAAQA,GAAK,EACI,IAAX3I,IACFA,EAAQk6F,EAAMj1F,OACd0D,GAAM,GAGR,MAAMub,EAAQg2E,EAAMh1F,MAAM4W,EAAO9b,GAAOoa,QAEpC8J,GAAUvb,GACZ4+G,EAAOhkH,KAAK2gB,GAGdpI,EAAQ9b,EAAQ,EAChBA,EAAQk6F,EAAM34F,QAAQ,IAAKua,EAC7B,CAEA,OAAOyrG,CACT,CAYO,SAAS98G,EAAU2Q,EAAQvZ,GAChC,MAAMyc,EAAWzc,GAAW,CAAC,EAK7B,OAF4C,KAA9BuZ,EAAOA,EAAOnW,OAAS,GAAY,IAAImW,EAAQ,IAAMA,GAGhE7T,MACE+W,EAASkpG,SAAW,IAAM,IACzB,MACsB,IAArBlpG,EAASs9C,QAAoB,GAAK,MAEtCxhD,MACL,wECrEA,MAAMlI,EAAUnQ,SAAS2S,cAAc,KAMhC,SAAS4wE,EAA8BhmF,GAC5C,MAAM+lF,EAAqB,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","sources":["../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../../lib/context.ts","../../lib/hooks.tsx","../../lib/components.tsx","../../dom.ts","../../index.tsx","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@uiw/react-split/esm/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/hast-util-from-html/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/hast-util-from-html/lib/errors.js","../node_modules/hast-util-from-html/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/zwitch/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/character-entities-html4/index.js","../node_modules/stringify-entities/lib/constant/dangerous.js","../node_modules/stringify-entities/lib/util/to-named.js","../node_modules/stringify-entities/lib/util/format-smart.js","../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../node_modules/stringify-entities/lib/util/to-decimal.js","../node_modules/stringify-entities/lib/index.js","../node_modules/ccount/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/handle/element.js","../node_modules/hast-util-to-html/lib/handle/text.js","../node_modules/hast-util-to-html/lib/handle/index.js","../node_modules/hast-util-to-html/lib/handle/comment.js","../node_modules/hast-util-to-html/lib/handle/doctype.js","../node_modules/hast-util-to-html/lib/handle/raw.js","../node_modules/hast-util-to-html/lib/handle/root.js","../node_modules/hast-util-to-html/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/rehype/index.js","../node_modules/rehype-parse/lib/index.js","../node_modules/rehype-stringify/lib/index.js","../node_modules/@uiw/react-textarea-code-editor/esm/utils.js","../node_modules/@uiw/react-textarea-code-editor/esm/SelectionText.js","../node_modules/@uiw/react-textarea-code-editor/esm/styles.js","../node_modules/@uiw/react-textarea-code-editor/esm/Editor.js","../node_modules/@uiw/react-textarea-code-editor/esm/shortcuts.js","../node_modules/rehype-prism-plus/node_modules/unist-util-is/lib/index.js","../node_modules/rehype-prism-plus/node_modules/unist-util-visit-parents/lib/index.js","../node_modules/rehype-prism-plus/node_modules/hast-util-to-string/index.js","../node_modules/unist-util-filter/node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../node_modules/rehype-prism-plus/node_modules/unist-util-visit/lib/index.js","../../src/all.js","../../src/common.js","../node_modules/@uiw/react-textarea-code-editor/esm/index.js","webpack://@uiw/react-run-web/./website/pages/run/Tag.module.less?2bb0","pages/run/Tag.tsx","../node_modules/@uiw/react-iframe/esm/Context.js","../node_modules/@uiw/react-iframe/esm/index.js","../esm/index.js","webpack://@uiw/react-run-web/./website/pages/run/index.module.less?ffe1","pages/run/index.tsx","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-position/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/lib/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-phrasing/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/remark-gfm/lib/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js","../node_modules/@uiw/react-markdown-preview/esm/plugins/useCopied.js","../node_modules/@uiw/react-markdown-preview/esm/preview.js","../node_modules/css-selector-parser/dist/mjs/indexes.js","../node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js","../node_modules/css-selector-parser/dist/mjs/syntax-definitions.js","../node_modules/css-selector-parser/dist/mjs/utils.js","../node_modules/css-selector-parser/dist/mjs/parser.js","../node_modules/css-selector-parser/dist/mjs/ast.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/direction/index.js","../node_modules/hast-util-to-string/lib/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/name.js","../node_modules/bcp-47-match/index.js","../node_modules/hast-util-has-property/lib/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/index.js","../node_modules/rehype-rewrite/src/index.ts","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/@uiw/react-markdown-preview/esm/plugins/reservedMeta.js","../node_modules/@uiw/react-markdown-preview/esm/plugins/retrieveMeta.js","../node_modules/github-slugger/regex.js","../node_modules/github-slugger/index.js","../node_modules/hast-util-heading-rank/lib/index.js","../node_modules/rehype-slug/lib/index.js","../node_modules/hast-util-is-element/lib/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/rehype-ignore/src/index.ts","../node_modules/@uiw/react-markdown-preview/esm/nodes/octiconLink.js","../node_modules/@uiw/react-markdown-preview/esm/rehypePlugins.js","../node_modules/@uiw/react-markdown-preview/esm/index.js","../node_modules/@uiw/react-markdown-preview/esm/nodes/copy.js","../node_modules/@uiw/github-corners/src/index.ts","../node_modules/@uiw/react-github-corners/esm/index.js","../README.md","webpack://@uiw/react-run-web/./website/pages/docs/index.module.less?a728","pages/docs/index.tsx","App.tsx","index.tsx","../../src/main.js","../node_modules/@wcj/dark-mode/dist/dark-mode.min.js","../node_modules/boolbase/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/parse-numeric-range/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/style-to-object/src/index.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/character-entities-legacy/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/space-separated-tokens/index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction<Context = any> {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)(\\?)?/g, (_: string, paramName: string, isOptional) => {\n        params.push({ paramName, isOptional: isOptional != null });\n        return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else if (isPathRelative) {\n    let fromSegments = routePathnames[routePathnames.length - 1]\n      .replace(/^\\//, \"\")\n      .split(\"/\");\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // With relative=\"path\", each leading .. segment means \"go up one URL segment\"\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        fromSegments.pop();\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = \"/\" + fromSegments.join(\"/\");\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // With relative=\"route\" (the default), each leading .. segment means\n      // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n      // difference from how <a href> works and a major reason we call this a\n      // \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      flushSync,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    flushSync?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingError || null,\n          ...(pendingActionData ? { actionData: pendingActionData } : {}),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(\n        {\n          navigation: loadingNavigation,\n          ...(actionData\n            ? Object.keys(actionData).length === 0\n              ? { actionData: null }\n              : { actionData }\n            : {}),\n          ...(revalidatingFetchers.length > 0\n            ? { fetchers: new Map(state.fetchers) }\n            : {}),\n        },\n        {\n          flushSync,\n        }\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        updateFetcherState(key, getLoadingFetcher(submission));\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(\n          `${method}() call aborted: ${request.method} ${request.url}`\n        );\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(\n        `${method}() call aborted: ${request.method} ${request.url}`\n      );\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this navigation's state updates\n   */\n  unstable_flushSync?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n              >\n                {state.initialized ? (\n                  <DataRoutes routes={router.routes} state={state} />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || \"\");\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"children\", \"mode\", \"visiable\", \"visible\", \"renderBar\", \"lineBar\", \"disable\", \"onDragEnd\", \"onDragging\"];\nimport React from 'react';\nimport \"./style/index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class Split extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n    this.warpper = void 0;\n    this.paneNumber = void 0;\n    this.startX = void 0;\n    this.startY = void 0;\n    this.move = void 0;\n    this.target = void 0;\n    this.boxWidth = void 0;\n    this.boxHeight = void 0;\n    this.preWidth = void 0;\n    this.nextWidth = void 0;\n    this.preHeight = void 0;\n    this.nextHeight = void 0;\n    this.preSize = void 0;\n    this.nextSize = void 0;\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.onDragging = this.onDragging.bind(this);\n  }\n  componentWillUnmount() {\n    this.removeEvent();\n  }\n  removeEvent() {\n    window.removeEventListener('mousemove', this.onDragging, false);\n    window.removeEventListener('mouseup', this.onDragEnd, false);\n  }\n  onMouseDown(paneNumber, env) {\n    if (!env.target || !this.warpper) {\n      return;\n    }\n    this.paneNumber = paneNumber;\n    this.startX = env.clientX;\n    this.startY = env.clientY;\n    this.move = true;\n    this.target = env.target.parentNode;\n    var prevTarget = this.target.previousElementSibling;\n    var nextTarget = this.target.nextElementSibling;\n    this.boxWidth = this.warpper.clientWidth;\n    this.boxHeight = this.warpper.clientHeight;\n    if (prevTarget) {\n      this.preWidth = prevTarget.clientWidth;\n      this.preHeight = prevTarget.clientHeight;\n    }\n    if (nextTarget) {\n      this.nextWidth = nextTarget.clientWidth;\n      this.nextHeight = nextTarget.clientHeight;\n    }\n    window.addEventListener('mousemove', this.onDragging);\n    window.addEventListener('mouseup', this.onDragEnd, false);\n    this.setState({\n      dragging: true\n    });\n  }\n  onDragging(env) {\n    if (!this.move) {\n      return;\n    }\n    if (!this.state.dragging) {\n      this.setState({\n        dragging: true\n      });\n    }\n    var {\n      mode,\n      onDragging\n    } = this.props;\n    var nextTarget = this.target.nextElementSibling;\n    var prevTarget = this.target.previousElementSibling;\n    var x = env.clientX - this.startX;\n    var y = env.clientY - this.startY;\n    this.preSize = 0;\n    this.nextSize = 0;\n    if (mode === 'horizontal') {\n      this.preSize = this.preWidth + x > -1 ? this.preWidth + x : 0;\n      this.nextSize = this.nextWidth - x > -1 ? this.nextWidth - x : 0;\n      if (this.preSize === 0 || this.nextSize === 0) {\n        return;\n      }\n      this.preSize = (this.preSize / this.boxWidth >= 1 ? 1 : this.preSize / this.boxWidth) * 100;\n      this.nextSize = (this.nextSize / this.boxWidth >= 1 ? 1 : this.nextSize / this.boxWidth) * 100;\n      if (prevTarget && nextTarget) {\n        prevTarget.style.width = this.preSize + \"%\";\n        nextTarget.style.width = this.nextSize + \"%\";\n      }\n    }\n    if (mode === 'vertical' && this.preHeight + y > -1 && this.nextHeight - y > -1) {\n      this.preSize = this.preHeight + y > -1 ? this.preHeight + y : 0;\n      this.nextSize = this.nextHeight - y > -1 ? this.nextHeight - y : 0;\n      this.preSize = (this.preSize / this.boxHeight >= 1 ? 1 : this.preSize / this.boxHeight) * 100;\n      this.nextSize = (this.nextSize / this.boxHeight >= 1 ? 1 : this.nextSize / this.boxHeight) * 100;\n      if (this.preSize === 0 || this.nextSize === 0) {\n        return;\n      }\n      if (prevTarget && nextTarget) {\n        prevTarget.style.height = this.preSize + \"%\";\n        nextTarget.style.height = this.nextSize + \"%\";\n      }\n    }\n    onDragging && onDragging(this.preSize, this.nextSize, this.paneNumber);\n  }\n  onDragEnd() {\n    var {\n      onDragEnd\n    } = this.props;\n    this.move = false;\n    onDragEnd && onDragEnd(this.preSize, this.nextSize, this.paneNumber);\n    this.removeEvent();\n    this.setState({\n      dragging: false\n    });\n  }\n  render() {\n    var _this$props$visible;\n    var _this$props = this.props,\n      {\n        prefixCls,\n        className,\n        children,\n        mode,\n        visible = (_this$props$visible = this.props.visible) != null ? _this$props$visible : this.props.visiable,\n        renderBar,\n        lineBar,\n        disable\n      } = _this$props,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    var {\n      dragging\n    } = this.state;\n    var cls = [prefixCls, className, prefixCls + \"-\" + mode, dragging ? 'dragging' : null].filter(Boolean).join(' ').trim();\n    var child = React.Children.toArray(children);\n    return /*#__PURE__*/_jsx(\"div\", _extends({\n      className: cls\n    }, other, {\n      ref: node => this.warpper = node,\n      children: React.Children.map(child, (element, idx) => {\n        var props = Object.assign({}, element.props, {\n          className: [prefixCls + \"-pane\", element.props.className].filter(Boolean).join(' ').trim(),\n          style: _extends({}, element.props.style)\n        });\n        var visibleBar = visible === true || visible && visible.includes(idx + 1) || false;\n        var barProps = {\n          className: [prefixCls + \"-bar\", lineBar ? prefixCls + \"-line-bar\" : null, !lineBar ? prefixCls + \"-large-bar\" : null].filter(Boolean).join(' ').trim()\n        };\n        if (disable === true || disable && disable.includes(idx + 1)) {\n          barProps.className = [barProps.className, disable ? 'disable' : null].filter(Boolean).join(' ').trim();\n        }\n        var BarCom = null;\n        if (idx !== 0 && visibleBar && renderBar) {\n          BarCom = renderBar(_extends({}, barProps, {\n            onMouseDown: this.onMouseDown.bind(this, idx + 1)\n          }));\n        } else if (idx !== 0 && visibleBar) {\n          BarCom = /*#__PURE__*/React.createElement('div', _extends({}, barProps), /*#__PURE__*/_jsx(\"div\", {\n            onMouseDown: this.onMouseDown.bind(this, idx + 1)\n          }));\n        }\n        return /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [BarCom, /*#__PURE__*/React.cloneElement(element, _extends({}, props))]\n        }, idx);\n      })\n    }));\n  }\n}\nSplit.defaultProps = {\n  prefixCls: 'w-split',\n  visiable: true,\n  mode: 'horizontal'\n};","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef ErrorInfo\n *   Info on a `parse5` error.\n * @property {string} reason\n *   Reason of error.\n * @property {string} description\n *   More info on error.\n * @property {false} [url]\n *   Turn off if this is not documented in the html5 spec (optional).\n */\n\nexport const errors = {\n  /** @type {ErrorInfo} */\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  /** @type {ErrorInfo} */\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  /** @type {ErrorInfo} */\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  /** @type {ErrorInfo} */\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  /** @type {ErrorInfo} */\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  /** @type {ErrorInfo} */\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  /** @type {ErrorInfo} */\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  /** @type {ErrorInfo} */\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  /** @type {ErrorInfo} */\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  /** @type {ErrorInfo} */\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  /** @type {ErrorInfo} */\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  /** @type {ErrorInfo} */\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  /** @type {ErrorInfo} */\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('parse5').ParserError} ParserError\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef {keyof errors} ErrorCode\n *   Known names of parse errors.\n *\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity | null | undefined>>} ErrorOptions\n *   Options that define the severity of errors.\n *\n * @typedef {boolean | 0 | 1 | 2} ErrorSeverity\n *   Error severity:\n *\n *   * `0` or `false`\n *     — turn the parse error off\n *   * `1` or `true`\n *     — turn the parse error into a warning\n *   * `2`\n *     — turn the parse error into an actual error: processing stops.\n *\n * @typedef ExtraOptions\n *   Options that define how to parse HTML.\n * @property {boolean | null | undefined} [fragment=false]\n *   Specify whether to parse a fragment, instead of a complete document\n *   (default: `false`).\n *\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n * @property {OnError | null | undefined} [onerror]\n *   Call `onerror` with parse errors while parsing (optional).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n *\n *   Specific rules can be turned off by setting them to `false` (or `0`).\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\n *   that rules emit as warnings.\n *   Rules can also be configured with `2`, to turn them into fatal errors.\n *\n * @typedef {Omit<import('hast-util-from-parse5').Options, 'file'>} FromParse5Options\n *   Options that can be passed through to `hast-util-from-parse5`.\n *\n * @callback OnError\n *   Handle parse errors.\n * @param {VFileMessage} error\n *   Message.\n * @returns {undefined | void}\n *   Nothing.\n *\n *   Note: `void` included until TS infers `undefined` nicely.\n *\n * @typedef {FromParse5Options & ErrorOptions & ExtraOptions} Options\n *   Configuration.\n */\n\nimport {ok as assert} from 'devlop'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {parse, parseFragment} from 'parse5'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst dashToCamelRe = /-[a-z]/g\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\nconst formatXRe = /%x/g\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFile | Value} value\n *   Serialized HTML to parse.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */\nexport function fromHtml(value, options) {\n  const settings = options || emptyOptions\n  const onerror = settings.onerror\n  const file = value instanceof VFile ? value : new VFile(value)\n  const fn = settings.fragment ? parseFragment : parse\n  const doc = String(file)\n  const p5doc = fn(doc, {\n    sourceCodeLocationInfo: true,\n    // Note `parse5` types currently do not allow `undefined`.\n    onParseError: settings.onerror ? internalOnerror : null,\n    scriptingEnabled: false\n  })\n\n  // `parse5` returns document which are always mapped to roots.\n  return /** @type {Root} */ (\n    fromParse5(p5doc, {\n      file,\n      space: settings.space,\n      verbose: settings.verbose\n    })\n  )\n\n  /**\n   * Handle a parse error.\n   *\n   * @param {ParserError} error\n   *   Parse5 error.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function internalOnerror(error) {\n    const code = error.code\n    const name = camelcase(code)\n    const setting = settings[name]\n    const config = setting === null || setting === undefined ? true : setting\n    const level = typeof config === 'number' ? config : config ? 1 : 0\n\n    if (level) {\n      const info = errors[name]\n      assert(info, 'expected known error from `parse5`')\n\n      const message = new VFileMessage(format(info.reason), {\n        place: {\n          start: {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n          },\n          end: {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n          }\n        },\n        ruleId: code,\n        source: 'hast-util-from-html'\n      })\n\n      if (file.path) {\n        message.file = file.path\n        message.name = file.path + ':' + message.name\n      }\n\n      message.fatal = fatalities[level]\n      message.note = format(info.description)\n      message.url = info.url === false ? undefined : base + code\n\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\n      onerror(message)\n    }\n\n    /**\n     * Format a human readable string about an error.\n     *\n     * @param {string} value\n     *   Value to format.\n     * @returns {string}\n     *   Formatted.\n     */\n    function format(value) {\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\n\n      /**\n       * Format the character.\n       *\n       * @param {string} _\n       *   Match.\n       * @param {string} $1\n       *   Sign (`-` or `+`, optional).\n       * @param {string} $2\n       *   Offset.\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatC(_, $1, $2) {\n        const offset =\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\n        const char = doc.charAt(error.startOffset + offset)\n        return visualizeCharacter(char)\n      }\n\n      /**\n       * Format the character code.\n       *\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatX() {\n        return visualizeCharacterCode(doc.charCodeAt(error.startOffset))\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n *   Error code in dash case.\n * @returns {ErrorCode}\n *   Error code in camelcase.\n */\nfunction camelcase(value) {\n  // This should match an error code.\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @returns {string}\n *   Camelcased.\n */\nfunction dashToCamel($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @param {string} char\n *   Character.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacter(char) {\n  return char === '`' ? '` ` `' : char\n}\n\n/**\n * @param {number} charCode\n *   Character code.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacterCode(charCode) {\n  return '0x' + charCode.toString(16).toUpperCase()\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== null && props[key] !== undefined) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Settings} settings\n *   User configuration.\n * @property {Schema} schema\n *   Current schema.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Quote} alternative\n *   Alternative quote.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Note: types exposed from `index.d.ts`\nimport rehypeParse from 'rehype-parse'\nimport rehypeStringify from 'rehype-stringify'\nimport {unified} from 'unified'\n\n/**\n * Create a new unified processor that already uses `rehype-parse` and\n * `rehype-stringify`.\n */\nexport const rehype = unified().use(rehypeParse).use(rehypeStringify).freeze()\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-from-html').Options} FromHtmlOptions\n * @typedef {import('unified').Parser<Root>} Parser\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\nimport {fromHtml} from 'hast-util-from-html'\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > 👉 **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeParse(options) {\n  /** @type {import('unified').Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc, file) {\n    return fromHtml(doc, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-html').Options} Options\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * Plugin to add support for serializing as HTML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeStringify(options) {\n  /** @type {import('unified').Processor<undefined, undefined, undefined, Root, string>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","import { rehype } from 'rehype';\nexport var processHtml = function processHtml(html, plugins) {\n  if (plugins === void 0) {\n    plugins = [];\n  }\n  return rehype().data('settings', {\n    fragment: true\n  }).use([...plugins]).processSync(\"\" + html).toString();\n};\nexport function htmlEncode(sHtml) {\n  return sHtml.replace(/```(tsx?|jsx?|html|xml)(.*)\\s+([\\s\\S]*?)(\\s.+)?```/g, str => {\n    return str.replace(/[<&\"]/g, c => ({\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\"': '&quot;'\n    })[c]);\n  }).replace(/[<&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}","export class SelectionText {\n  constructor(elm) {\n    this.elm = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.value = void 0;\n    var {\n      selectionStart,\n      selectionEnd\n    } = elm;\n    this.elm = elm;\n    this.start = selectionStart;\n    this.end = selectionEnd;\n    this.value = this.elm.value;\n  }\n  position(start, end) {\n    var {\n      selectionStart,\n      selectionEnd\n    } = this.elm;\n    this.start = typeof start === 'number' && !isNaN(start) ? start : selectionStart;\n    this.end = typeof end === 'number' && !isNaN(end) ? end : selectionEnd;\n    this.elm.selectionStart = this.start;\n    this.elm.selectionEnd = this.end;\n    return this;\n  }\n  insertText(text) {\n    // Most of the used APIs only work with the field selected\n    this.elm.focus();\n    this.elm.setRangeText(text);\n    this.value = this.elm.value;\n    this.position();\n    return this;\n  }\n  getSelectedValue(start, end) {\n    var {\n      selectionStart,\n      selectionEnd\n    } = this.elm;\n    return this.value.slice(typeof start === 'number' && !isNaN(start) ? start : selectionStart, typeof end === 'number' && !isNaN(end) ? start : selectionEnd);\n  }\n  getLineStartNumber() {\n    var start = this.start;\n    while (start > 0) {\n      start--;\n      if (this.value.charAt(start) === '\\n') {\n        start++;\n        break;\n      }\n    }\n    return start;\n  }\n  /** Indent on new lines */\n  getIndentText() {\n    var start = this.getLineStartNumber();\n    var str = this.getSelectedValue(start);\n    var indent = '';\n    str.replace(/(^(\\s)+)/, (str, old) => indent = old);\n    return indent;\n  }\n  lineStarInstert(text) {\n    if (text) {\n      var oldStart = this.start;\n      var start = this.getLineStartNumber();\n      var str = this.getSelectedValue(start);\n      this.position(start, this.end).insertText(str.split('\\n').map(txt => text + txt).join('\\n')).position(oldStart + text.length, this.end);\n    }\n    return this;\n  }\n  lineStarRemove(text) {\n    if (text) {\n      var oldStart = this.start;\n      var start = this.getLineStartNumber();\n      var str = this.getSelectedValue(start);\n      var reg = new RegExp(\"^\" + text, 'g');\n      var newStart = oldStart - text.length;\n      if (!reg.test(str)) {\n        newStart = oldStart;\n      }\n      this.position(start, this.end).insertText(str.split('\\n').map(txt => txt.replace(reg, '')).join('\\n')).position(newStart, this.end);\n    }\n  }\n  /** Notify any possible listeners of the change */\n  notifyChange() {\n    var event = new Event('input', {\n      bubbles: true,\n      cancelable: false\n    });\n    this.elm.dispatchEvent(event);\n  }\n}","export var container = {\n  position: 'relative',\n  textAlign: 'left',\n  boxSizing: 'border-box',\n  padding: 0,\n  overflow: 'hidden'\n};\nexport var textarea = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  height: '100%',\n  width: '100%',\n  resize: 'none',\n  color: 'inherit',\n  opacity: 0.8,\n  overflow: 'hidden',\n  MozOsxFontSmoothing: 'grayscale',\n  WebkitFontSmoothing: 'antialiased',\n  WebkitTextFillColor: 'transparent'\n};\nexport var editor = {\n  margin: 0,\n  border: 0,\n  background: 'none',\n  boxSizing: 'inherit',\n  display: 'inherit',\n  fontFamily: 'inherit',\n  fontSize: 'inherit',\n  fontStyle: 'inherit',\n  fontVariantLigatures: 'inherit',\n  fontWeight: 'inherit',\n  letterSpacing: 'inherit',\n  lineHeight: 'inherit',\n  tabSize: 'inherit',\n  textIndent: 'inherit',\n  textRendering: 'inherit',\n  textTransform: 'inherit',\n  whiteSpace: 'pre-wrap',\n  wordBreak: 'keep-all',\n  overflowWrap: 'break-word',\n  outline: 0\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"value\", \"padding\", \"minHeight\", \"placeholder\", \"language\", \"data-color-mode\", \"className\", \"style\", \"rehypePlugins\", \"onChange\"];\nimport React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { processHtml, htmlEncode } from './utils';\nimport shortcuts from './shortcuts';\nimport * as styles from './styles';\nimport \"./style/index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport * from './SelectionText';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      prefixCls = 'w-tc-editor',\n      padding = 10,\n      minHeight = 16,\n      placeholder,\n      language,\n      'data-color-mode': dataColorMode,\n      className,\n      style,\n      rehypePlugins,\n      onChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var [value, setValue] = useState(props.value || '');\n  useEffect(() => setValue(props.value || ''), [props.value]);\n  var textRef = useRef(null);\n  useImperativeHandle(ref, () => textRef.current, [textRef]);\n  var contentStyle = {\n    paddingTop: padding,\n    paddingRight: padding,\n    paddingBottom: padding,\n    paddingLeft: padding\n  };\n  var htmlStr = useMemo(() => processHtml(\"<pre aria-hidden=true><code \" + (language && value ? \"class=\\\"language-\" + language + \"\\\"\" : '') + \" >\" + htmlEncode(String(value || '')) + \"</code><br /></pre>\", rehypePlugins), [value, language, rehypePlugins]);\n  var preView = useMemo(() => /*#__PURE__*/_jsx(\"div\", {\n    style: _extends({}, styles.editor, contentStyle, {\n      minHeight\n    }),\n    className: prefixCls + \"-preview \" + (language ? \"language-\" + language : ''),\n    dangerouslySetInnerHTML: {\n      __html: htmlStr\n    }\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [prefixCls, language, htmlStr]);\n  var change = evn => {\n    setValue(evn.target.value);\n    onChange && onChange(evn);\n  };\n  var keyDown = evn => {\n    if (other.readOnly) return;\n    if (!other.onKeyDown || other.onKeyDown(evn) !== false) {\n      shortcuts(evn);\n    }\n  };\n  var textareaProps = _extends({\n    autoComplete: 'off',\n    autoCorrect: 'off',\n    spellCheck: 'false',\n    autoCapitalize: 'off'\n  }, other, {\n    placeholder,\n    onKeyDown: keyDown,\n    style: _extends({}, styles.editor, styles.textarea, contentStyle, {\n      minHeight\n    }, placeholder && !value ? {\n      WebkitTextFillColor: 'inherit'\n    } : {}),\n    onChange: change,\n    className: prefixCls + \"-text\",\n    value: value\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: _extends({}, styles.container, style),\n    className: prefixCls + \" \" + (className || ''),\n    \"data-color-mode\": dataColorMode,\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({}, textareaProps, {\n      ref: textRef\n    })), preView]\n  });\n});","import { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\nexport default function shortcuts(e) {\n  var api = new SelectionText(e.target);\n  /**\n   * Support of shortcuts for React v16\n   * https://github.com/uiwjs/react-textarea-code-editor/issues/128\n   * https://blog.saeloun.com/2021/04/23/react-keyboard-event-code.html\n   */\n  var code = (e.code || e.nativeEvent.code).toLocaleLowerCase();\n  if (code === 'tab') {\n    stopPropagation(e);\n    if (api.start === api.end) {\n      if (e.shiftKey) {\n        api.lineStarRemove('  ');\n      } else {\n        api.insertText('  ').position(api.start + 2, api.end + 2);\n      }\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n    api.notifyChange();\n  } else if (code === 'enter') {\n    stopPropagation(e);\n    var indent = \"\\n\" + api.getIndentText();\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (code && /^(quote|backquote|bracketleft|digit9|comma)$/.test(code) && api.getSelectedValue()) {\n    stopPropagation(e);\n    var val = api.getSelectedValue();\n    var txt = '';\n    switch (code) {\n      case 'quote':\n        txt = \"'\" + val + \"'\";\n        if (e.shiftKey) {\n          txt = \"\\\"\" + val + \"\\\"\";\n        }\n        break;\n      case 'backquote':\n        txt = \"`\" + val + \"`\";\n        break;\n      case 'bracketleft':\n        txt = \"[\" + val + \"]\";\n        if (e.shiftKey) {\n          txt = \"{\" + val + \"}\";\n        }\n        break;\n      case 'digit9':\n        txt = \"(\" + val + \")\";\n        break;\n      case 'comma':\n        txt = \"<\" + val + \">\";\n        break;\n    }\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to filter.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   New filtered tree.\n *\n *   `null` is returned if `tree` itself didn’t pass the test, or is cascaded\n *   away.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: Options | null | undefined, test: Check | null | undefined) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: Options | null | undefined) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | Test | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      /** @type {boolean | null | undefined} */\n      const cascadeRaw =\n        options && typeof options === 'object' && 'cascade' in options\n          ? /** @type {boolean | null | undefined} */ (options.cascade)\n          : undefined\n      const cascade =\n        cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       *   Current node.\n       * @param {number | undefined} [index]\n       *   Index of `node` in `parent`.\n       * @param {Parent | undefined} [parent]\n       *   Parent node.\n       * @returns {Node | null}\n       *   Shallow copy of `node`.\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        const children = []\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          let childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            const result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n        /** @type {string} */\n        let key\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"rehypePlugins\"];\nimport React from 'react';\nimport Editor from './Editor';\nimport rehypePrism from 'rehype-prism-plus';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from './Editor';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      rehypePlugins = [[rehypePrism, {\n        ignoreMissing: true\n      }]]\n    } = props,\n    reset = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(Editor, _extends({}, reset, {\n    rehypePlugins: rehypePlugins,\n    ref: ref\n  }));\n});","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"Tag_tag__FSixd\"};","import styles from './Tag.module.less';\n\nexport interface TagProps extends React.HTMLAttributes<HTMLDivElement> {\n  color?: string;\n}\n\nexport default function Tag(props: TagProps) {\n  const { color } = props;\n  return (\n    <div className={styles.tag} style={{ color: '#fff', borderColor: color, backgroundColor: color, opacity: 0.9 }}>\n      {props.children}\n    </div>\n  );\n}\n","import React from 'react';\nvar doc;\nvar win;\nif (typeof document !== 'undefined') {\n  doc = document;\n}\nif (typeof window !== 'undefined') {\n  win = window;\n}\nexport var FrameContext = /*#__PURE__*/React.createContext({\n  document: doc,\n  window: win\n});\nexport var useFrame = () => React.useContext(FrameContext);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"head\", \"initialContent\", \"src\", \"mountTarget\"];\nimport { useCallback, useEffect, useState, forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nimport { FrameContext } from './Context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { FrameContext, useFrame } from './Context';\nvar IFrame = /*#__PURE__*/forwardRef((_ref, ref) => {\n  var {\n      children,\n      head,\n      initialContent,\n      src,\n      mountTarget\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var [iframeLoaded, setIframeLoaded] = useState(false);\n  var [mountNode, setMountNode] = useState();\n  var refContent = node => {\n    if (node) {\n      setMountNode(node);\n    }\n  };\n  useImperativeHandle(ref, () => mountNode, [mountNode]);\n  var html = initialContent || \"<!DOCTYPE html><html><head></head><body></body></html>\";\n  var getDoc = () => mountNode ? mountNode.contentDocument : null;\n  var getMountTarget = () => {\n    var doc = getDoc();\n    if (mountTarget) {\n      return doc == null ? void 0 : doc.querySelector(mountTarget);\n    }\n    return doc == null ? void 0 : doc.body;\n  };\n  var handleLoad = useCallback(() => {\n    /**\n     * In certain situations on a cold cache DOMContentLoaded never gets called\n     * fallback to an interval to check if that's the case\n     */\n    var loadCheck = () => setInterval(() => handleLoad(), 500);\n    clearInterval(loadCheck());\n    // Bail update as some browsers will trigger on both DOMContentLoaded & onLoad ala firefox\n    if (!iframeLoaded) {\n      setIframeLoaded(true);\n    }\n  }, [iframeLoaded]);\n  useEffect(() => {\n    if (mountNode && !src) {\n      var _mountNode$contentWin;\n      (_mountNode$contentWin = mountNode.contentWindow) == null || _mountNode$contentWin.addEventListener('DOMContentLoaded', handleLoad);\n    }\n    return () => {\n      if (mountNode && !src) {\n        var _mountNode$contentWin2;\n        (_mountNode$contentWin2 = mountNode.contentWindow) == null || _mountNode$contentWin2.removeEventListener('DOMContentLoaded', handleLoad);\n      }\n    };\n  }, [mountNode, handleLoad]);\n  var renderFrameContents = () => {\n    var _getDoc;\n    var doc = getDoc();\n    var header = (_getDoc = getDoc()) == null ? void 0 : _getDoc.head;\n    var mountTarget = getMountTarget();\n    // @ts-ignore\n    var win = (doc == null ? void 0 : doc.defaultView) || (doc == null ? void 0 : doc.parentView);\n    var contents = /*#__PURE__*/_jsx(FrameContext.Provider, {\n      value: {\n        document: doc,\n        window: win\n      },\n      children: children\n    });\n    return [header && head && /*#__PURE__*/createPortal(head, header), mountNode && mountTarget && /*#__PURE__*/createPortal(contents, mountTarget)];\n  };\n  var reProps = {};\n  if (src) {\n    delete reProps.srcDoc;\n    reProps.src = src;\n    reProps.onLoad = other.onLoad;\n  } else {\n    reProps.srcDoc = html;\n  }\n  return /*#__PURE__*/_jsx(\"iframe\", _extends({\n    title: other.title,\n    ref: refContent\n  }, other, {\n    onLoad: handleLoad\n  }, reProps, {\n    children: iframeLoaded && renderFrameContents()\n  }));\n});\nIFrame.displayName = 'IFrame';\nexport default IFrame;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"html\", \"css\", \"js\", \"title\", \"head\"];\nimport React from 'react';\nimport IFrame from '@uiw/react-iframe';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      html = '',\n      css,\n      js,\n      title = 'Demo Title',\n      head\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var jsString = js ? \"<script type=\\\"text/javascript\\\">\" + js + \"</script>\" : '';\n  var cssString = css ? \"<style>\" + css + \"</style>\" : '';\n  var result = \"<!DOCTYPE html><html><head>\" + cssString + \"</head><body>\" + html + \"</body>\" + jsString + \"</html>\";\n  var blob = new Blob([result], {\n    type: 'text/html'\n  });\n  var url = URL.createObjectURL(blob);\n  return /*#__PURE__*/_jsx(IFrame, _extends({\n    title: title,\n    head: head,\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      border: 0\n    }\n  }, other, {\n    ref: ref,\n    src: url,\n    mountTarget: \"#mountHere\"\n  }));\n});","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"index_header__Y15F7\",\"menu\":\"index_menu__Dn0pj\",\"editor\":\"index_editor__cTCg7\",\"editorCode\":\"index_editorCode__qWvKn\"};","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport Split from '@uiw/react-split';\nimport CodeEditor from '@uiw/react-textarea-code-editor';\nimport '@wcj/dark-mode';\nimport Tag from './Tag';\nimport RunWeb from '../../../';\nimport styles from './index.module.less';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function Run() {\n  const [htmlStr, setHtmlStr] = useState('');\n  const [cssStr, setCssStr] = useState('');\n  const [jsStr, setJsStr] = useState('');\n  const query = useQuery();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const html = query.get('html');\n    const css = query.get('css');\n    const js = query.get('js');\n    if (html) {\n      setHtmlStr(html);\n    }\n    if (css) {\n      setCssStr(css);\n    }\n    if (js) {\n      setJsStr(js);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (value: string, type: 'html' | 'css' | 'js') => {\n    switch (type) {\n      case 'html':\n        setHtmlStr(value);\n        query.set('html', value);\n        break;\n      case 'css':\n        setCssStr(value);\n        query.set('css', value);\n        break;\n      case 'js':\n        setJsStr(value);\n        query.set('js', value);\n        break;\n      default:\n        break;\n    }\n    navigate(`?${query.toString()}`, {\n      replace: true,\n      state: query.toString(),\n    });\n  };\n\n  return (\n    <div style={{ minHeight: '100vh' }}>\n      <div className={styles.header}>\n        Run Web\n        <div className={styles.menu}>\n          <a href=\"https://github.com/uiwjs/react-run-web\" target=\"__blank\">\n            Github\n          </a>\n          <Link to=\"/docs\" state={query.toString() || ''}>\n            Docs\n          </Link>\n          <dark-mode permanent />\n        </div>\n      </div>\n      <Split style={{ width: '100%', height: 'calc(100vh - 39px)' }}>\n        <Split lineBar mode=\"vertical\" style={{ minWidth: 120, width: '43%' }}>\n          <div style={{ height: '40%' }} className={styles.editor}>\n            <Tag color=\"#f44336\">HTML</Tag>\n            <div className={styles.editorCode}>\n              <CodeEditor\n                value={htmlStr}\n                style={{ fontSize: 16, minHeight: '100%' }}\n                placeholder=\"Please enter HTML code.\"\n                onChange={(evn) => handleChange(evn.target.value, 'html')}\n                language=\"html\"\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              height: '30%',\n              zIndex: 2,\n            }}\n            className={styles.editor}\n          >\n            <Tag color=\"#f7ac09\">JS</Tag>\n            <div className={styles.editorCode}>\n              <CodeEditor\n                value={jsStr}\n                style={{ fontSize: 16, minHeight: '100%' }}\n                placeholder=\"Please enter JavaScript code.\"\n                onChange={(evn) => handleChange(evn.target.value, 'js')}\n                language=\"js\"\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              height: '30%',\n              zIndex: 3,\n            }}\n            className={styles.editor}\n          >\n            <Tag color=\"#004fd4\">CSS</Tag>\n            <div className={styles.editorCode}>\n              <CodeEditor\n                value={cssStr}\n                style={{ fontSize: 16, minHeight: '100%' }}\n                placeholder=\"Please enter CSS code.\"\n                onChange={(evn) => handleChange(evn.target.value, 'css')}\n                language=\"css\"\n              />\n            </div>\n          </div>\n        </Split>\n        <div style={{ minWidth: 120, flex: 1 }}>\n          <RunWeb css={cssStr} js={jsStr} html={htmlStr} head={<meta charSet=\"utf-8\" />} />\n        </div>\n      </Split>\n    </div>\n  );\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (toHast(tree, options))\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (toHast(tree, options || destination))\n  }\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is PhrasingContent} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      'link',\n      'linkReference',\n      'strong',\n      'text'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useEffect } from 'react';\nfunction getParentElement(target) {\n  if (!target) return null;\n  var dom = target;\n  if (dom.dataset.code && dom.classList.contains('copied')) {\n    return dom;\n  }\n  if (dom.parentElement) {\n    return getParentElement(dom.parentElement);\n  }\n  return null;\n}\nexport function useCopied(container) {\n  var handle = event => {\n    var target = getParentElement(event.target);\n    if (!target) return;\n    target.classList.add('active');\n    copyTextToClipboard(target.dataset.code, function () {\n      setTimeout(() => {\n        target.classList.remove('active');\n      }, 2000);\n    });\n  };\n  useEffect(() => {\n    var _container$current, _container$current2;\n    (_container$current = container.current) == null || _container$current.removeEventListener('click', handle, false);\n    (_container$current2 = container.current) == null || _container$current2.addEventListener('click', handle, false);\n    return () => {\n      var _container$current3;\n      (_container$current3 = container.current) == null || _container$current3.removeEventListener('click', handle, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container]);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"source\", \"style\", \"disableCopy\", \"skipHtml\", \"onScroll\", \"onMouseOver\", \"pluginsFilter\", \"rehypeRewrite\", \"wrapperElement\", \"warpperElement\"];\nimport React, { useImperativeHandle } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport raw from 'rehype-raw';\nimport { useCopied } from './plugins/useCopied';\nimport \"./styles/markdown.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from './preview';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      prefixCls = 'wmde-markdown wmde-markdown-color',\n      className,\n      source,\n      style,\n      disableCopy = false,\n      skipHtml = true,\n      onScroll,\n      onMouseOver,\n      pluginsFilter,\n      wrapperElement = {},\n      warpperElement = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var mdp = React.useRef(null);\n  useImperativeHandle(ref, () => _extends({}, props, {\n    mdp\n  }), [mdp, props]);\n  var cls = (prefixCls || '') + \" \" + (className || '');\n  useCopied(mdp);\n  var rehypePlugins = [...(other.rehypePlugins || [])];\n  var customProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    }\n  };\n  if (skipHtml) {\n    rehypePlugins.push(raw);\n  }\n  var remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  var wrapperProps = _extends({}, warpperElement, wrapperElement);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: mdp,\n    onScroll: onScroll,\n    onMouseOver: onMouseOver\n  }, wrapperProps, {\n    className: cls,\n    style: style,\n    children: /*#__PURE__*/_jsx(ReactMarkdown, _extends({}, customProps, other, {\n      skipHtml: skipHtml,\n      rehypePlugins: pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins,\n      remarkPlugins: pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins,\n      children: source || ''\n    }))\n  }));\n});","export var emptyMulticharIndex = {};\nexport var emptyRegularIndex = {};\nfunction extendIndex(item, index) {\n    var currentIndex = index;\n    for (var pos = 0; pos < item.length; pos++) {\n        var isLast = pos === item.length - 1;\n        var char = item.charAt(pos);\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\n        if (isLast) {\n            charIndex.self = item;\n        }\n        currentIndex = charIndex.chars;\n    }\n}\nexport function createMulticharIndex(items) {\n    if (items.length === 0) {\n        return emptyMulticharIndex;\n    }\n    var index = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        extendIndex(item, index);\n    }\n    return index;\n}\nexport function createRegularIndex(items) {\n    if (items.length === 0) {\n        return emptyRegularIndex;\n    }\n    var result = {};\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n        var item = items_2[_i];\n        result[item] = true;\n    }\n    return result;\n}\n","export var emptyPseudoSignatures = {};\nexport var defaultPseudoSignature = {\n    type: 'String',\n    optional: true\n};\nfunction calculatePseudoSignature(types) {\n    var result = {\n        type: 'NoArgument',\n        optional: false\n    };\n    function setResultType(type) {\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\n        }\n        result.type = type;\n    }\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        if (type === 'NoArgument') {\n            result.optional = true;\n        }\n        if (type === 'Formula') {\n            setResultType('Formula');\n        }\n        if (type === 'FormulaOfSelector') {\n            setResultType('Formula');\n            result.ofSelector = true;\n        }\n        if (type === 'String') {\n            setResultType('String');\n        }\n        if (type === 'Selector') {\n            setResultType('Selector');\n        }\n    }\n    return result;\n}\nexport function inverseCategories(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var items = obj[category];\n        if (items) {\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                (result[item] || (result[item] = [])).push(category);\n            }\n        }\n    }\n    return result;\n}\nexport function calculatePseudoSignatures(definitions) {\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\n    var result = {};\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\n        var pseudoClass = _a[_i];\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\n        if (argumentTypes) {\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\n        }\n    }\n    return result;\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar emptyXmlOptions = {};\nvar defaultXmlOptions = { wildcard: true };\nexport function getXmlOptions(param) {\n    if (param) {\n        if (typeof param === 'boolean') {\n            return defaultXmlOptions;\n        }\n        else {\n            return param;\n        }\n    }\n    else {\n        return emptyXmlOptions;\n    }\n}\nfunction withMigration(migration, merge) {\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\n}\nfunction withNoNegative(merge) {\n    return function (base, extension) {\n        var result = merge(base, extension);\n        if (!result) {\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\n        }\n        return result;\n    };\n}\nfunction withPositive(positive, merge) {\n    return function (base, extension) {\n        if (extension === true) {\n            return positive;\n        }\n        return merge(base === true ? positive : base, extension);\n    };\n}\nfunction mergeSection(values) {\n    return function (base, extension) {\n        if (!extension || !base) {\n            return extension;\n        }\n        if (typeof extension !== 'object' || extension === null) {\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\n        }\n        var result = __assign({}, base);\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            var mergeSchema = values[key];\n            result[key] = mergeSchema(base[key], value);\n        }\n        return result;\n    };\n}\nfunction replaceValueIfSpecified(base, extension) {\n    if (extension !== undefined) {\n        return extension;\n    }\n    return base;\n}\nfunction concatArray(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    return base.concat(extension);\n}\nfunction mergeDefinitions(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    var result = __assign({}, base);\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (!value) {\n            delete result[key];\n            continue;\n        }\n        var baseValue = base[key];\n        if (!baseValue) {\n            result[key] = value;\n            continue;\n        }\n        result[key] = baseValue.concat(value);\n    }\n    return result;\n}\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\n    baseSyntax: replaceValueIfSpecified,\n    tag: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    ids: replaceValueIfSpecified,\n    classNames: replaceValueIfSpecified,\n    namespace: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    combinators: concatArray,\n    attributes: mergeSection({\n        operators: concatArray,\n        caseSensitivityModifiers: concatArray,\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\n    }),\n    pseudoClasses: mergeSection({\n        unknown: replaceValueIfSpecified,\n        definitions: mergeDefinitions\n    }),\n    pseudoElements: mergeSection({\n        unknown: replaceValueIfSpecified,\n        notation: replaceValueIfSpecified,\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\n    })\n}));\nvar css1SyntaxDefinition = {\n    tag: {},\n    ids: true,\n    classNames: true,\n    combinators: [],\n    pseudoElements: {\n        unknown: 'reject',\n        notation: 'singleColon',\n        definitions: ['first-letter', 'first-line']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['link', 'visited', 'active']\n        }\n    }\n};\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\n    tag: { wildcard: true },\n    combinators: ['>', '+'],\n    attributes: {\n        unknownCaseSensitivityModifiers: 'reject',\n        operators: ['=', '~=', '|=']\n    },\n    pseudoElements: {\n        definitions: ['before', 'after']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['hover', 'focus', 'first-child'],\n            String: ['lang']\n        }\n    }\n});\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\n    namespace: {\n        wildcard: true\n    },\n    combinators: ['~'],\n    attributes: {\n        operators: ['^=', '$=', '*=']\n    },\n    pseudoElements: {\n        notation: 'both'\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'root',\n                'last-child',\n                'first-of-type',\n                'last-of-type',\n                'only-child',\n                'only-of-type',\n                'empty',\n                'target',\n                'enabled',\n                'disabled',\n                'checked',\n                'indeterminate'\n            ],\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\n            Selector: ['not']\n        }\n    }\n});\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\n    combinators: ['||'],\n    attributes: {\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'any-link',\n                'local-link',\n                'target-within',\n                'scope',\n                'current',\n                'past',\n                'future',\n                'focus-within',\n                'focus-visible',\n                'read-write',\n                'read-only',\n                'placeholder-shown',\n                'default',\n                'valid',\n                'invalid',\n                'in-range',\n                'out-of-range',\n                'required',\n                'optional',\n                'blank',\n                'user-invalid'\n            ],\n            Formula: ['nth-col', 'nth-last-col'],\n            String: ['dir'],\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\n            Selector: ['current', 'is', 'where', 'has']\n        }\n    }\n});\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(selectors4SyntaxDefinition, {\n    pseudoElements: {\n        unknown: 'accept'\n    },\n    pseudoClasses: {\n        unknown: 'accept'\n    },\n    attributes: {\n        unknownCaseSensitivityModifiers: 'accept'\n    }\n});\nexport var cssSyntaxDefinitions = {\n    css1: css1SyntaxDefinition,\n    css2: css2SyntaxDefinition,\n    css3: selectors3SyntaxDefinition,\n    'selectors-3': selectors3SyntaxDefinition,\n    'selectors-4': selectors4SyntaxDefinition,\n    latest: selectors4SyntaxDefinition,\n    progressive: progressiveSyntaxDefinition\n};\n","export function isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\';\n}\nexport function isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexport function isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexport var identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    $: true,\n    '%': true,\n    '&': true,\n    \"'\": true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexport var strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexport var stringEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\'\n};\nexport var whitespaceChars = {\n    ' ': true,\n    '\\t': true,\n    '\\n': true,\n    '\\r': true,\n    '\\f': true\n};\nexport var quoteChars = {\n    '\"': true,\n    \"'\": true\n};\nexport var digitsChars = {\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n    8: true,\n    9: true\n};\nexport function escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' ||\n                chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xf800) === 0xd800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result.trim();\n}\nexport function escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\".concat(result, \"\\\"\");\n}\n","import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions } from './syntax-definitions.js';\nimport { digitsChars, isHex, isIdent, isIdentStart, quoteChars, stringEscapeChars, whitespaceChars } from './utils.js';\nvar errorPrefix = \"css-selector-parser parse error: \";\n/**\n * Creates a parse function to be used later to parse CSS selectors.\n */\nexport function createParser(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b;\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\n    if (syntaxDefinition.baseSyntax) {\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\n    }\n    var _c = syntaxDefinition.tag\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\n        : [false, false], tagNameEnabled = _c[0], tagNameWildcardEnabled = _c[1];\n    var idEnabled = Boolean(syntaxDefinition.ids);\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\n    if (namespaceEnabled && !tagNameEnabled) {\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\n    }\n    var substitutesEnabled = Boolean(substitutes);\n    var combinatorsIndex = syntaxDefinition.combinators\n        ? createMulticharIndex(syntaxDefinition.combinators)\n        : emptyMulticharIndex;\n    var _d = syntaxDefinition.attributes\n        ? [\n            true,\n            syntaxDefinition.attributes.operators\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\n                : emptyMulticharIndex,\n            syntaxDefinition.attributes.caseSensitivityModifiers\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\n                : emptyRegularIndex,\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\n        ]\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _d[0], attributesOperatorsIndex = _d[1], attributesCaseSensitivityModifiers = _d[2], attributesAcceptUnknownCaseSensitivityModifiers = _d[3];\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\n    var _e = syntaxDefinition.pseudoClasses\n        ? [\n            true,\n            syntaxDefinition.pseudoClasses.definitions\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\n        ]\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _e[0], pseudoClassesDefinitions = _e[1], pseudoClassesAcceptUnknown = _e[2];\n    var _f = syntaxDefinition.pseudoElements\n        ? [\n            true,\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            !syntaxDefinition.pseudoElements.notation ||\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            syntaxDefinition.pseudoElements.definitions\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\n                    : syntaxDefinition.pseudoElements.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoElements.unknown === 'accept'\n        ]\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _f[0], pseudoElementsSingleColonNotationEnabled = _f[1], pseudoElementsDoubleColonNotationEnabled = _f[2], pseudoElementsDefinitions = _f[3], pseudoElementsAcceptUnknown = _f[4];\n    var str = '';\n    var l = str.length;\n    var pos = 0;\n    var chr = '';\n    var is = function (comparison) { return chr === comparison; };\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\n    var rewind = function (newPos) {\n        pos = newPos;\n        chr = str.charAt(pos);\n    };\n    var next = function () {\n        pos++;\n        chr = str.charAt(pos);\n    };\n    var readAndNext = function () {\n        var current = chr;\n        pos++;\n        chr = str.charAt(pos);\n        return current;\n    };\n    /** @throws ParserError */\n    function fail(errorMessage) {\n        var position = Math.min(l - 1, pos);\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\n        error.position = position;\n        error.name = 'ParserError';\n        throw error;\n    }\n    function assert(condition, errorMessage) {\n        if (!condition) {\n            return fail(errorMessage);\n        }\n    }\n    var assertNonEof = function () {\n        assert(pos < l, 'Unexpected end of input.');\n    };\n    var isEof = function () { return pos >= l; };\n    var pass = function (character) {\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\n        pos++;\n        chr = str.charAt(pos);\n    };\n    function matchMulticharIndex(index) {\n        var match = matchMulticharIndexPos(index, pos);\n        if (match) {\n            pos += match.length;\n            chr = str.charAt(pos);\n            return match;\n        }\n    }\n    function matchMulticharIndexPos(index, subPos) {\n        var char = str.charAt(subPos);\n        var charIndex = index[char];\n        if (charIndex) {\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\n            if (subMatch) {\n                return subMatch;\n            }\n            if (charIndex.self) {\n                return charIndex.self;\n            }\n        }\n    }\n    function parseHex() {\n        var hex = readAndNext();\n        while (isHex(chr)) {\n            hex += readAndNext();\n        }\n        if (is(' ')) {\n            next();\n        }\n        return String.fromCharCode(parseInt(hex, 16));\n    }\n    function parseString(quote) {\n        var result = '';\n        pass(quote);\n        while (pos < l) {\n            if (is(quote)) {\n                next();\n                return result;\n            }\n            else if (is('\\\\')) {\n                next();\n                var esc = void 0;\n                if (is(quote)) {\n                    result += quote;\n                }\n                else if ((esc = stringEscapeChars[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (isHex(chr)) {\n                    result += parseHex();\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            next();\n        }\n        return result;\n    }\n    function parseIdentifier() {\n        if (!isIdentStart(chr)) {\n            return null;\n        }\n        var result = '';\n        while (pos < l) {\n            if (isIdent(chr)) {\n                result += readAndNext();\n            }\n            else if (is('\\\\')) {\n                next();\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        return result;\n    }\n    function parsePseudoClassString() {\n        var result = '';\n        while (pos < l) {\n            if (is(')')) {\n                break;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (isEof() && !strict) {\n                    return (result + '\\\\').trim();\n                }\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                result += readAndNext();\n            }\n        }\n        return result.trim();\n    }\n    function skipWhitespace() {\n        while (whitespaceChars[chr]) {\n            next();\n        }\n    }\n    function parseSelector(relative) {\n        if (relative === void 0) { relative = false; }\n        skipWhitespace();\n        var rules = [parseRule(relative)];\n        while (is(',')) {\n            next();\n            skipWhitespace();\n            rules.push(parseRule(relative));\n        }\n        return {\n            type: 'Selector',\n            rules: rules\n        };\n    }\n    function parseAttribute() {\n        pass('[');\n        skipWhitespace();\n        var attr;\n        if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var name_1 = parseIdentifier();\n            assert(name_1, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_1,\n                namespace: { type: 'NoNamespace' }\n            };\n        }\n        else if (is('*')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            next();\n            pass('|');\n            var name_2 = parseIdentifier();\n            assert(name_2, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_2,\n                namespace: { type: 'WildcardNamespace' }\n            };\n        }\n        else {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: identifier\n            };\n            if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isIdentStart(chr)) {\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\n                    var name_3 = parseIdentifier();\n                    assert(name_3, 'Expected attribute name.');\n                    attr = {\n                        type: 'Attribute',\n                        name: name_3,\n                        namespace: { type: 'NamespaceName', name: identifier }\n                    };\n                }\n                else {\n                    rewind(savedPos);\n                }\n            }\n        }\n        assert(attr.name, 'Expected attribute name.');\n        skipWhitespace();\n        if (isEof() && !strict) {\n            return attr;\n        }\n        if (is(']')) {\n            next();\n        }\n        else {\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\n            skipWhitespace();\n            assertNonEof();\n            if (quoteChars[chr]) {\n                attr.value = {\n                    type: 'String',\n                    value: parseString(chr)\n                };\n            }\n            else if (substitutesEnabled && is('$')) {\n                next();\n                var name_4 = parseIdentifier();\n                assert(name_4, 'Expected substitute name.');\n                attr.value = {\n                    type: 'Substitution',\n                    name: name_4\n                };\n            }\n            else {\n                var value = parseIdentifier();\n                assert(value, 'Expected attribute value.');\n                attr.value = {\n                    type: 'String',\n                    value: value\n                };\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return attr;\n            }\n            if (!is(']')) {\n                var caseSensitivityModifier = parseIdentifier();\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\n                attr.caseSensitivityModifier = caseSensitivityModifier;\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\n                skipWhitespace();\n                if (isEof() && !strict) {\n                    return attr;\n                }\n            }\n            pass(']');\n        }\n        return attr;\n    }\n    function parseNumber() {\n        var result = '';\n        while (digitsChars[chr]) {\n            result += readAndNext();\n        }\n        assert(result !== '', 'Formula parse error.');\n        return parseInt(result);\n    }\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\n    function parseFormula() {\n        if (is('e') || is('o')) {\n            var ident = parseIdentifier();\n            if (ident === 'even') {\n                skipWhitespace();\n                return [2, 0];\n            }\n            if (ident === 'odd') {\n                skipWhitespace();\n                return [2, 1];\n            }\n        }\n        var firstNumber = null;\n        var firstNumberMultiplier = 1;\n        if (is('-')) {\n            next();\n            firstNumberMultiplier = -1;\n        }\n        if (isNumberStart()) {\n            if (is('+')) {\n                next();\n            }\n            firstNumber = parseNumber();\n            if (!is('\\\\') && !is('n')) {\n                return [0, firstNumber * firstNumberMultiplier];\n            }\n        }\n        if (firstNumber === null) {\n            firstNumber = 1;\n        }\n        firstNumber *= firstNumberMultiplier;\n        var identifier;\n        if (is('\\\\')) {\n            next();\n            if (isHex(chr)) {\n                identifier = parseHex();\n            }\n            else {\n                identifier = readAndNext();\n            }\n        }\n        else {\n            identifier = readAndNext();\n        }\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\n        skipWhitespace();\n        if (is('+') || is('-')) {\n            var sign = is('+') ? 1 : -1;\n            next();\n            skipWhitespace();\n            return [firstNumber, sign * parseNumber()];\n        }\n        else {\n            return [firstNumber, 0];\n        }\n    }\n    function parsePseudoArgument(pseudoName, type, signature) {\n        var argument;\n        if (is('(')) {\n            next();\n            skipWhitespace();\n            if (substitutesEnabled && is('$')) {\n                next();\n                var name_5 = parseIdentifier();\n                assert(name_5, 'Expected substitute name.');\n                argument = {\n                    type: 'Substitution',\n                    name: name_5\n                };\n            }\n            else if (signature.type === 'String') {\n                argument = {\n                    type: 'String',\n                    value: parsePseudoClassString()\n                };\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\n            }\n            else if (signature.type === 'Selector') {\n                argument = parseSelector(true);\n            }\n            else if (signature.type === 'Formula') {\n                var _a = parseFormula(), a = _a[0], b = _a[1];\n                argument = {\n                    type: 'Formula',\n                    a: a,\n                    b: b\n                };\n                if (signature.ofSelector) {\n                    skipWhitespace();\n                    if (is('o') || is('\\\\')) {\n                        var ident = parseIdentifier();\n                        assert(ident === 'of', 'Formula of selector parse error.');\n                        skipWhitespace();\n                        argument = {\n                            type: 'FormulaOfSelector',\n                            a: a,\n                            b: b,\n                            selector: parseRule()\n                        };\n                    }\n                }\n            }\n            else {\n                return fail(\"Invalid \".concat(type, \" signature.\"));\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return argument;\n            }\n            pass(')');\n        }\n        else {\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\n        }\n        return argument;\n    }\n    function parseTagName() {\n        if (is('*')) {\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\n            next();\n            return { type: 'WildcardTag' };\n        }\n        else if (isIdentStart(chr)) {\n            assert(tagNameEnabled, 'Tag names are not enabled.');\n            var name_6 = parseIdentifier();\n            assert(name_6, 'Expected tag name.');\n            return {\n                type: 'TagName',\n                name: name_6\n            };\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseTagNameWithNamespace() {\n        if (is('*')) {\n            var savedPos = pos;\n            next();\n            if (!is('|')) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'WildcardNamespace' };\n            return tagName;\n        }\n        else if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NoNamespace' };\n            return tagName;\n        }\n        else if (isIdentStart(chr)) {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected tag name.');\n            if (!is('|')) {\n                assert(tagNameEnabled, 'Tag names are not enabled.');\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            var savedPos = pos;\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\n            return tagName;\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseRule(relative) {\n        var _a, _b;\n        if (relative === void 0) { relative = false; }\n        var rule = { type: 'Rule', items: [] };\n        if (relative) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            if (combinator) {\n                rule.combinator = combinator;\n                skipWhitespace();\n            }\n        }\n        while (pos < l) {\n            if (isTagStart()) {\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                rule.items.push(parseTagNameWithNamespace());\n            }\n            else if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isTagStart()) {\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                    rewind(savedPos);\n                    rule.items.push(parseTagNameWithNamespace());\n                }\n                else {\n                    rewind(savedPos);\n                    break;\n                }\n            }\n            else if (is('.')) {\n                assert(classNamesEnabled, 'Class names are not enabled.');\n                next();\n                var className = parseIdentifier();\n                assert(className, 'Expected class name.');\n                rule.items.push({ type: 'ClassName', name: className });\n            }\n            else if (is('#')) {\n                assert(idEnabled, 'IDs are not enabled.');\n                next();\n                var idName = parseIdentifier();\n                assert(idName, 'Expected ID name.');\n                rule.items.push({ type: 'Id', name: idName });\n            }\n            else if (is('[')) {\n                assert(attributesEnabled, 'Attributes are not enabled.');\n                rule.items.push(parseAttribute());\n            }\n            else if (is(':')) {\n                var isDoubleColon = false;\n                var isPseudoElement = false;\n                next();\n                if (is(':')) {\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\n                    isDoubleColon = true;\n                    next();\n                }\n                var pseudoName = parseIdentifier();\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\n                assert(pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon ||\n                    pseudoElementsAcceptUnknown ||\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName), \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\".\"));\n                isPseudoElement =\n                    pseudoElementsEnabled &&\n                        (isDoubleColon ||\n                            (!isDoubleColon &&\n                                pseudoElementsSingleColonNotationEnabled &&\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\n                if (isPseudoElement) {\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\n                    var pseudoElement = {\n                        type: 'PseudoElement',\n                        name: pseudoName\n                    };\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\n                    if (argument) {\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\n                        pseudoElement.argument = argument;\n                    }\n                    rule.items.push(pseudoElement);\n                }\n                else {\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\n                    assert(signature, \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\".\"));\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\n                    var pseudoClass = {\n                        type: 'PseudoClass',\n                        name: pseudoName\n                    };\n                    if (argument) {\n                        pseudoClass.argument = argument;\n                    }\n                    rule.items.push(pseudoClass);\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (rule.items.length === 0) {\n            if (isEof()) {\n                return fail('Expected rule but end of input reached.');\n            }\n            else {\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\n            }\n        }\n        skipWhitespace();\n        if (!isEof() && !is(',') && !is(')')) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            skipWhitespace();\n            rule.nestedRule = parseRule();\n            rule.nestedRule.combinator = combinator;\n        }\n        return rule;\n    }\n    return function (input) {\n        // noinspection SuspiciousTypeOfGuard\n        if (typeof input !== 'string') {\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\n        }\n        str = input;\n        l = str.length;\n        pos = 0;\n        chr = str.charAt(0);\n        return parseSelector();\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction astMethods(type) {\n    return function (generatorName, checkerName) {\n        var _a;\n        return (_a = {},\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\n            _a[checkerName] = function (entity) {\n                return typeof entity === 'object' && entity !== null && entity.type === type;\n            },\n            _a);\n    };\n}\n/**\n * AST structure generators and matchers.\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\n * AstSelector was specified.\n *\n * @example\n *\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\n *                 ast.id({name: 'user-34'}),\n *                 ast.className({name: 'user'}),\n *                 ast.className({name: 'user-active'}),\n *                 ast.attribute({\n *                     name: 'role',\n *                     operator: '=',\n *                     value: ast.string({value: 'button'})\n *                 }),\n *                 ast.pseudoClass({\n *                     name: 'lang',\n *                     argument: ast.string({value: 'en'})\n *                 }),\n *                 ast.pseudoElement({name: 'before'})\n *             ],\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\n *         })\n *     ]\n * });\n * console.log(ast.isSelector(selector)); // prints true\n * console.log(ast.isRule(selector)); // prints false\n */\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\n","/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n */\n\nimport {createParser} from 'css-selector-parser'\n\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\n\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return cssSelectorParse(selector)\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n *\n * @typedef {import('unist-util-visit').Visitor<ElementContent>} Visitor\n *\n * @typedef {import('./index.js').Direction} Direction\n * @typedef {import('./index.js').State} State\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {EXIT, SKIP, visit} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element') {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== null && lang !== undefined) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? dirBidi(String(node.properties.value))\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('css-selector-parser').AstAttribute} AstAttribute\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find} from 'property-information'\nimport * as spaces from 'space-separated-tokens'\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function attribute(query, element, schema) {\n  const info = find(schema, query.name)\n  const propertyValue = element.properties[info.property]\n  let value = normalizeValue(propertyValue, info)\n\n  // Exists.\n  if (!query.value) {\n    return value !== undefined\n  }\n\n  assert(query.value.type === 'String', 'expected plain string')\n  let key = query.value.value\n\n  // Case-sensitivity.\n  if (query.caseSensitivityModifier === 'i') {\n    key = key.toLowerCase()\n\n    if (value) {\n      value = value.toLowerCase()\n    }\n  }\n\n  if (value !== undefined) {\n    switch (query.operator) {\n      // Exact.\n      case '=': {\n        return key === value\n      }\n\n      // Ends.\n      case '$=': {\n        return key === value.slice(-key.length)\n      }\n\n      // Contains.\n      case '*=': {\n        return value.includes(key)\n      }\n\n      // Begins.\n      case '^=': {\n        return key === value.slice(0, key.length)\n      }\n\n      // Exact or prefix.\n      case '|=': {\n        return (\n          key === value ||\n          (key === value.slice(0, key.length) &&\n            value.charAt(key.length) === '-')\n        )\n      }\n\n      // Space-separated list.\n      case '~=': {\n        return (\n          // For all other values (including comma-separated lists), return whether this\n          // is an exact match.\n          key === value ||\n          // If this is a space-separated list, and the query is contained in it, return\n          // true.\n          spaces.parse(value).includes(key)\n        )\n      }\n      // Other values are not yet supported by CSS.\n      // No default\n    }\n  }\n\n  return false\n}\n\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */\nfunction normalizeValue(value, info) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'boolean') {\n    if (value) {\n      return info.attribute\n    }\n  } else if (Array.isArray(value)) {\n    if (value.length > 0) {\n      return (info.commaSeparated ? commas : spaces.stringify)(value)\n    }\n  } else {\n    return String(value)\n  }\n}\n","/**\n * @typedef {import('css-selector-parser').AstClassName} AstClassName\n * @typedef {import('hast').Element} Element\n */\n\n/** @type {Array<never>} */\nconst emptyClassNames = []\n\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function className(query, element) {\n  // Assume array.\n  const value = /** @type {Readonly<Array<string>>} */ (\n    element.properties.className || emptyClassNames\n  )\n\n  return value.includes(query.name)\n}\n","/**\n * @typedef {import('css-selector-parser').AstId} AstId\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function id(query, element) {\n  return element.properties.id === query.name\n}\n","/**\n * @typedef {import('css-selector-parser').AstTagName} AstTagName\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function name(query, element) {\n  return query.name === element.tagName\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node` is an element and has a `name` property.\n *\n * @template {string} Key\n *   Type of key.\n * @param {Nodes} node\n *   Node to check (typically `Element`).\n * @param {Key} name\n *   Property name to check.\n * @returns {node is Element & {properties: Record<Key, Array<number | string> | number | string | true>}}}\n *   Whether `node` is an element that has a `name` property.\n *\n *   Note: see <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/27c9274/types/hast/index.d.ts#L37C29-L37C98>.\n */\nexport function hasProperty(node, name) {\n  const value =\n    node.type === 'element' &&\n    own.call(node.properties, name) &&\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n",null,null,null,"/**\n * @typedef {import('css-selector-parser').AstPseudoClass} AstPseudoClass\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {ok as assert, unreachable} from 'devlop'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error: types are broken.\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\nexport const pseudo = zwitch('name', {\n  handlers: {\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    is,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-last-of-type': nthLastOfType,\n    'nth-of-type': nthOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  },\n  invalid: invalidPseudo,\n  unknown: unknownPseudo\n})\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      (element.properties.type === 'checkbox' ||\n        element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction dir(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected plain text')\n  return state.direction === query.argument.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    const value = query.argument\n    assert(value, 'expected `argument`')\n\n    if (value.type !== 'Formula') {\n      throw new Error(\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\n      )\n    }\n\n    fn = nthCheck(value.a + 'n+' + value.b)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction has(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  unreachable('Invalid pseudo-selector')\n}\n\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction is(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lang(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected string')\n\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    extendedFilter(state.language, commas(query.argument.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction not(query, element, index, parent, state) {\n  return !is(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction root(_1, element, _2, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction scope(_1, element, _2, _3, state) {\n  return state.scopeElements.includes(element)\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */\nfunction unknownPseudo(query_) {\n  // Runtime JS guarantees it has a `name`.\n  const query = /** @type {AstPseudoClass} */ (query_)\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\n}\n","/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function test(query, element, index, parent, state) {\n  for (const item of query.items) {\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (item.type === 'Attribute') {\n      if (!attribute(item, element, state.schema)) return false\n    } else if (item.type === 'Id') {\n      if (!id(item, element)) return false\n    } else if (item.type === 'ClassName') {\n      if (!className(item, element)) return false\n    } else if (item.type === 'PseudoClass') {\n      if (!pseudo(item, element, index, parent, state)) return false\n    } else if (item.type === 'PseudoElement') {\n      throw new Error('Invalid selector: `::' + item.name + '`')\n    } else if (item.type === 'TagName') {\n      if (!name(item, element)) return false\n    } else {\n      // Otherwise `item.type` is `WildcardTag`, which matches.\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\n/**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined, tree)\n  }\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(state, nest, node, tree) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<AstRule> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(\n        state,\n        forSibling,\n        node.children[index],\n        index,\n        node,\n        tree\n      )\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const rule = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && rule.nestedRule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(rule, node, index, parent, state)) {\n      const nest = rule.nestedRule\n\n      // Are there more?\n      if (nest) {\n        /** @type {keyof Nest} */\n        const label =\n          nest.combinator === '+'\n            ? 'adjacentSibling'\n            : nest.combinator === '~'\n            ? 'generalSibling'\n            : nest.combinator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, nest)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (rule.combinator === undefined) {\n      add(nestResult, 'descendant', rule)\n    }\n    // Adjacent.\n    else if (rule.combinator === '~') {\n      add(nestResult, 'generalSibling', rule)\n    }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */\nfunction one(state, currentRules, node, index, parent, tree) {\n  /** @type {Nest} */\n  let nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    let rootRules = state.rootQuery.rules\n\n    // Remove direct child rules if this is the root.\n    // This only happens for a `:has()` rule, which can be like\n    // `a:has(> b)`.\n    if (parent && parent !== tree) {\n      rootRules = state.rootQuery.rules.filter(\n        (d) =>\n          d.combinator === undefined ||\n          (d.combinator === '>' && parent === tree)\n      )\n    }\n\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, rootRules),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node, tree)\n  }\n\n  exit()\n\n  return nestResult\n}\n","/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */\n\nimport {html, svg} from 'property-information'\nimport {parse} from './parse.js'\nimport {walk} from './walk.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  return state.results[0]\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */\nfunction createState(selector, tree, space) {\n  return {\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    elementCount: undefined,\n    elementIndex: undefined,\n    found: false,\n    language: undefined,\n    one: false,\n    // State of the query.\n    results: [],\n    rootQuery: parse(selector),\n    schema: space === 'svg' ? svg : html,\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    shallow: false,\n    typeIndex: undefined,\n    typeCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index?: number, parent?: Root | Element): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import type { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport type { RehypeAttrsOptions } from './index.js';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import type { Plugin } from 'unified';\nimport type { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport { visit } from 'unist-util-visit';\nexport var reservedMeta = function reservedMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = _extends({}, node.properties, {\n          'data-meta': String(node.data.meta)\n        });\n      }\n    });\n  };\n};","import { visit } from 'unist-util-visit';\nexport var retrieveMeta = function retrieveMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.properties && node.properties['dataMeta']) {\n        if (!node.data) {\n          node.data = {};\n        }\n        node.data.meta = node.properties['dataMeta'];\n        delete node.properties['dataMeta'];\n      }\n    });\n  };\n};","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Nodes} node\n *   Node to check.\n * @returns {number | undefined}\n *   Rank of the heading or `undefined` if not a heading.\n */\nexport function headingRank(node) {\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */\n    ? code - 48 /* `0` */\n    : undefined\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\n *   Behavior.\n *\n * @callback Build\n *   Generate content.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Content.\n *\n * @callback BuildProperties\n *   Generate properties.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Properties}\n *   Properties.\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior | null | undefined} [behavior='prepend']\n *   How to create links (default: `'prepend'`).\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\n *   otherwise `<span class=\"icon icon-link\"></span>`);\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\n *   existing content, otherwise the content is added after existing content.\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\n *   `'before'` (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\n *   Extra properties to set on the heading (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\n *   Extra properties to set on the link when injecting (default:\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\n *   `undefined`).\n * @property {Test | null | undefined} [test]\n *   Extra test for which headings are linked (optional).\n */\n\n/**\n * @template T\n *   Kind.\n * @typedef {(\n *   T extends Record<any, any>\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\n *     : T\n * )} Cloneable\n *   Deep clone.\n *\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add links from headings back to themselves.\n *\n * ###### Notes\n *\n * This plugin only applies to headings with `id`s.\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\n *\n * Several behaviors are supported:\n *\n * *   `'prepend'` (default) — inject link before the heading text\n * *   `'append'` — inject link after the heading text\n * *   `'wrap'` — wrap the whole heading text with the link\n * *   `'before'` — insert link before the heading\n * *   `'after'` — insert link after the heading\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeAutolinkHeadings(options) {\n  const settings = options || emptyOptions\n  let properties = settings.properties\n  const headingOroperties = settings.headingProperties\n  const behavior = settings.behavior || 'prepend'\n  const content = settings.content\n  const group = settings.group\n  const is = convertElement(settings.test)\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  let method\n\n  if (behavior === 'after' || behavior === 'before') {\n    method = around\n  } else if (behavior === 'wrap') {\n    method = wrap\n  } else {\n    method = inject\n\n    if (!properties) {\n      properties = {ariaHidden: 'true', tabIndex: -1}\n    }\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\n        Object.assign(node.properties, toProperties(headingOroperties, node))\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function inject(node) {\n    const children = toChildren(content || contentDefaults, node)\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, toProperties(properties, node), children)\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function around(node, index, parent) {\n    /* c8 ignore next -- uncommon */\n    if (typeof index !== 'number' || !parent) return\n\n    const children = toChildren(content || contentDefaults, node)\n    const link = create(node, toProperties(properties, node), children)\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function wrap(node) {\n    /** @type {Array<ElementContent>} */\n    let before = node.children\n    /** @type {Array<ElementContent> | ElementContent} */\n    let after = []\n\n    if (typeof content === 'function') {\n      before = []\n      after = content(node)\n    } else if (content) {\n      after = clone(content)\n    }\n\n    node.children = [\n      create(\n        node,\n        toProperties(properties, node),\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\n      )\n    ]\n\n    return [SKIP]\n  }\n}\n\n/**\n * Deep clone.\n *\n * @template T\n *   Kind.\n * @param {T} thing\n *   Thing to clone.\n * @returns {Cloneable<T>}\n *   Cloned thing.\n */\nfunction clone(thing) {\n  // Cast because it’s mutable now.\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\n}\n\n/**\n * Create an `a`.\n *\n * @param {Readonly<Element>} node\n *   Related heading.\n * @param {Properties | undefined} properties\n *   Properties to set on the link.\n * @param {Array<ElementContent>} children\n *   Content.\n * @returns {Element}\n *   Link.\n */\nfunction create(node, properties, children) {\n  return {\n    type: 'element',\n    tagName: 'a',\n    properties: {...properties, href: '#' + node.properties.id},\n    children\n  }\n}\n\n/**\n * Turn into children.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent>}\n *   Children.\n */\nfunction toChildren(value, node) {\n  const result = toNode(value, node)\n  return Array.isArray(result) ? result : [result]\n}\n\n/**\n * Turn into a node.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Node.\n */\nfunction toNode(value, node) {\n  if (typeof value === 'function') return value(node)\n  return clone(value)\n}\n\n/**\n * Turn into properties.\n *\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\n *   Properties.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Properties}\n *   Properties.\n */\nfunction toProperties(value, node) {\n  if (typeof value === 'function') return value(node)\n  return value ? clone(value) : {}\n}\n","import type { Plugin, Pluggable } from 'unified';\nimport type { Root, RootContent, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\n\n/**\n * Raw string of HTML embedded into HTML AST.\n */\nexport interface Raw extends Literal {\n  /**\n   * Node type.\n   */\n  type: 'raw'\n}\n\n// Register nodes in content.\ndeclare module 'hast' {\n  interface RootContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n  interface ElementContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n}\n\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","export var octiconLink = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true'\n  },\n  children: [{\n    type: 'element',\n    tagName: 'path',\n    children: [],\n    properties: {\n      fillRule: 'evenodd',\n      d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'\n    }\n  }]\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeIgnore from 'rehype-ignore';\nimport { getCodeString } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nexport var rehypeRewriteHandle = (disableCopy, rewrite) => (node, index, parent) => {\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    var child = node.children && node.children[0];\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = _extends({\n        class: 'anchor'\n      }, child.properties);\n      child.children = [octiconLink];\n    }\n  }\n  if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n    var code = getCodeString(node.children);\n    node.children.push(copyElement(code));\n  }\n  rewrite && rewrite(node, index === null ? undefined : index, parent === null ? undefined : parent);\n};\nexport var defaultRehypePlugins = [slug, headings, rehypeIgnore];","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport MarkdownPreview from './preview';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite from 'rehype-rewrite';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeRaw from 'rehype-raw';\nimport { reservedMeta } from './plugins/reservedMeta';\nimport { retrieveMeta } from './plugins/retrieveMeta';\nimport { rehypeRewriteHandle, defaultRehypePlugins } from './rehypePlugins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from './preview';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _props$disableCopy;\n  var rehypePlugins = [reservedMeta, rehypeRaw, retrieveMeta, [rehypePrism, {\n    ignoreMissing: true\n  }], ...defaultRehypePlugins, [rehypeRewrite, {\n    rewrite: rehypeRewriteHandle((_props$disableCopy = props.disableCopy) != null ? _props$disableCopy : false, props.rehypeRewrite)\n  }], [rehypeAttrs, {\n    properties: 'attr'\n  }], ...(props.rehypePlugins || [])];\n  return /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, props, {\n    rehypePlugins: rehypePlugins,\n    ref: ref\n  }));\n});","export function copyElement(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      class: 'copied',\n      'data-code': str\n    },\n    children: [{\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-copy',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\n        },\n        children: []\n      }, {\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\n        },\n        children: []\n      }]\n    }, {\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-check',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z'\n        },\n        children: []\n      }]\n    }]\n  };\n}","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"size\", \"fixed\", \"bottom\", \"zIndex\", \"className\", \"style\", \"bgColor\", \"color\", \"position\"];\nimport React from 'react';\nimport '@uiw/github-corners';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function githubCorners(props) {\n  var {\n      size = 80,\n      fixed = false,\n      bottom,\n      zIndex,\n      style,\n      bgColor = '#151513',\n      color = '#fff',\n      position = 'right'\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  var styl = position === 'left' ? {\n    left: 0,\n    right: 'initial',\n    transform: 'scale(-1, 1)'\n  } : {\n    right: 0,\n    left: 'initial',\n    transform: 'scale(1, 1)'\n  };\n  if (bottom) {\n    styl.bottom = 0;\n    styl.top = 'initial';\n    styl.transform = position === 'left' ? 'scale(-1, -1)' : 'scale(1, -1)';\n  } else {\n    styl.bottom = 'initial';\n    styl.top = 0;\n  }\n  return /*#__PURE__*/_jsx(\"github-corners\", _extends({\n    target: \"__blank\",\n    width: size,\n    height: size,\n    href: props.href,\n    position: fixed ? 'fixed' : 'absolute',\n    \"z-index\": zIndex,\n    style: style,\n    fill: bgColor,\n    color: color\n  }, styl, otherProps));\n}","export default \"Run Web\\n===\\n\\n[![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)\\n[![Build & Deploy](https://github.com/uiwjs/react-run-web/actions/workflows/ci.yml/badge.svg)](https://github.com/uiwjs/react-run-web/actions/workflows/ci.yml)\\n[![Coverage Status](https://uiwjs.github.io/react-run-web/badges.svg)](https://uiwjs.github.io/react-run-web/coverage/lcov-report)\\n[![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-run-web/file/README.md)\\n[![npm bundle size](https://img.shields.io/bundlephobia/minzip/@uiw/react-run-web)](https://www.npmjs.com/package/@uiw/react-run-web)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-run-web.svg)](https://www.npmjs.com/package/@uiw/react-run-web)\\n[![Open in Gitpod](https://shields.io/badge/Open%20in-Gitpod-green?logo=Gitpod)](https://gitpod.io/#https://github.com/uiwjs/react-run-web)\\n\\nOnline Code Editor for Rapid Web Development, [Preview Demo](https://uiwjs.github.io/react-run-web#/?html=<div>Hello%20World</div>&js=console.log('hello%20world')&css=div%20{%20color:%20red;}).\\n\\n## Install\\n\\n```bash\\nnpm install @uiw/react-run-web\\n```\\n\\n## Usage\\n\\n```jsx\\nimport RunWeb from '@uiw/react-run-web';\\n\\n<RunWeb\\n  css=\\\"div {color:red;}\\\"\\n  js=\\\"console.log('hello world!')\\\"\\n  html=\\\"<div>hello world!</div>\\\"\\n/>\\n```\\n\\n## Props\\n\\n```ts\\ninterface RunWebProps extends React.IframeHTMLAttributes<HTMLIFrameElement> {\\n  css?: string;\\n  js?: string;\\n  html?: string;\\n  title?: string;\\n  head?: React.ReactNode;\\n}\\n```\\n\\n## Online Code Preview\\n\\n[Preview Demo Example](https://uiwjs.github.io/react-run-web#/?html=<div>Hello%20World</div>&js=console.log('hello%20world')&css=div%20{%20color:%20red;}).\\n\\n```url\\nhttps://uiwjs.github.io/react-run-web#/?html=...&js=...&css=...\\n```\\n\\n## Development\\n\\nRuns the project in development mode.  \\n\\n```bash\\n# Step 1, run first, listen to the component compile and output the .js file\\n# listen for compilation output type .d.ts file\\nnpm run watch\\n# Step 2, development mode, listen to compile preview website instance\\nnpm run start\\n```\\n\\n**`production`**\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\";","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"index_link__8ILWW\"};","import { useLocation, Link } from 'react-router-dom';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport MDStr from '../../../README.md';\nimport styles from './index.module.less';\n\nexport default function Docs() {\n  const location = useLocation();\n  return (\n    <div style={{ margin: '0 auto', maxWidth: 650, paddingTop: 50, paddingBottom: 60 }}>\n      <GitHubCorners fixed size={52} target=\"__blank\" href=\"https://github.com/uiwjs/react-run-web\" />\n      <Link className={styles.link} to={location.state ? `/?${location.state}` : '/'} state={location.state}>\n        <svg viewBox=\"0 0 1087 1024\" height=\"14\" style={{ marginRight: 8 }}>\n          <path\n            fill=\"currentColor\"\n            d=\"M497.579901 211.531321V41.021661a40.850381 40.850381 0 0 0-70.481893-28.004349L39.404774 363.457054c-85.126369 62.003513-5.823534 108.506147-5.823535 108.506147L415.365299 819.234256c76.305428 58.834825 82.214602-31.001756 82.214602-31.001756V630.140671c387.693234-127.175713 546.298904 381.441499 546.298905 381.441498 14.730116 27.833068 23.465418 0 23.465417 0C1217.128952 248.699172 497.579901 211.44568 497.579901 211.44568z\"\n          />\n        </svg>\n        Run Web\n      </Link>\n      <MarkdownPreview source={MDStr} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\nimport Home from './pages/run';\nimport Docs from './pages/docs';\nimport './App.less';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />}>\n          <Route index element={<Home />} />\n        </Route>\n        <Route path=\"/docs\" element={<Docs />} />\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import * as ReactDOMClient from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(container!);\nroot.render(<App />);\n","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  if (typeof document === \"undefined\") return;\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","/**\n * @package @wcj/dark-mode\n * Web Component that toggles dark mode 🌒\n * Github: https://github.com/jaywcjlove/dark-mode.git\n * Website: https://jaywcjlove.github.io/dark-mode\n * \n * Licensed under the MIT license.\n * @license Copyright © 2022. Licensed under the MIT License\n * @author kenny wong <wowohoo@qq.com>\n */\nconst t=document;const e=\"_dark_mode_theme_\";const s=\"permanent\";const o=\"colorschemechange\";const i=\"permanentcolorscheme\";const h=\"light\";const r=\"dark\";const n=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){const t=this.getAttribute(e);return t===null?\"\":t},set(t){this.setAttribute(e,t)}})};const c=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){return this.hasAttribute(e)},set(t){if(t){this.setAttribute(e,\"\")}else{this.removeAttribute(e)}}})};class a extends HTMLElement{static get observedAttributes(){return[\"mode\",h,r,s]}LOCAL_NANE=e;constructor(){super();this.t()}connectedCallback(){n(this,\"mode\");n(this,r);n(this,h);c(this,s);const a=localStorage.getItem(e);if(a&&[h,r].includes(a)){this.mode=a;this.permanent=true}if(this.permanent&&!a){localStorage.setItem(e,this.mode)}const l=[h,r].includes(a);if(this.permanent&&a){this.o()}else{if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){this.mode=r;this.o()}if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: light)\").matches){this.mode=h;this.o()}}if(!this.permanent&&!l){window.matchMedia(\"(prefers-color-scheme: light)\").onchange=t=>{this.mode=t.matches?h:r;this.o()};window.matchMedia(\"(prefers-color-scheme: dark)\").onchange=t=>{this.mode=t.matches?r:h;this.o()}}const d=new MutationObserver(((s,h)=>{this.mode=t.documentElement.dataset.colorMode;if(this.permanent&&l){localStorage.setItem(e,this.mode);this.i(i,{permanent:this.permanent})}this.h();this.i(o,{colorScheme:this.mode})}));d.observe(t.documentElement,{attributes:true});this.i(o,{colorScheme:this.mode});this.h()}attributeChangedCallback(t,s,o){if(t===\"mode\"&&s!==o&&[h,r].includes(o)){const t=localStorage.getItem(e);if(this.mode===t){this.mode=o;this.h();this.o()}else if(this.mode&&this.mode!==t){this.h();this.o()}}else if((t===h||t===r)&&s!==o){this.h()}if(t===\"permanent\"&&typeof this.permanent===\"boolean\"){this.permanent?localStorage.setItem(e,this.mode):localStorage.removeItem(e)}}o(){t.documentElement.setAttribute(\"data-color-mode\",this.mode)}h(){this.icon.textContent=this.mode===h?\"🌒\":\"🌞\";this.text.textContent=this.mode===h?this.getAttribute(r):this.getAttribute(h);if(!this.text.textContent&&this.text.parentElement&&this.text){this.text.parentElement.removeChild(this.text)}}t(){var s=this.attachShadow({mode:\"open\"});this.label=t.createElement(\"span\");this.label.setAttribute(\"class\",\"wrapper\");this.label.onclick=()=>{this.mode=this.mode===h?r:h;if(this.permanent){localStorage.setItem(e,this.mode)}this.o();this.h()};s.appendChild(this.label);this.icon=t.createElement(\"span\");this.label.appendChild(this.icon);this.text=t.createElement(\"span\");this.label.appendChild(this.text);const o=`\\n[data-color-mode*='dark'], [data-color-mode*='dark'] body {\\n  color-scheme: dark;\\n  --color-theme-bg: #0d1117;\\n  --color-theme-text: #c9d1d9;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}\\n\\n[data-color-mode*='light'], [data-color-mode*='light'] body {\\n  color-scheme: light;\\n  --color-theme-bg: #fff;\\n  --color-theme-text: #24292f;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}`;const i=\"_dark_mode_style_\";const n=t.getElementById(i);if(!n){var c=t.createElement(\"style\");c.id=i;c.textContent=o;t.head.appendChild(c)}var a=t.createElement(\"style\");a.textContent=`\\n    .wrapper { cursor: pointer; user-select: none; position: relative; }\\n    .wrapper > span + span { margin-left: .4rem; }\\n    `;s.appendChild(a)}i(t,e){this.dispatchEvent(new CustomEvent(t,{bubbles:true,composed:true,detail:e}))}}customElements.define(\"dark-mode\",a);","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","import parse from 'inline-style-parser';\nimport type { Declaration } from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_uiw_react_run_web\"] = self[\"webpackChunk_uiw_react_run_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [269,264], () => (__webpack_require__(457)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Action","PopStateEventType","invariant","value","message","Error","warning","cond","console","warn","e","getHistoryState","location","index","usr","state","key","idx","createLocation","current","to","_extends","pathname","search","hash","parsePath","Math","random","toString","substr","createPath","_ref","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","options","window","document","defaultView","v5Compat","globalHistory","history","action","Pop","listener","getIndex","handlePop","nextIndex","delta","createURL","base","origin","href","URL","replaceState","listen","fn","addEventListener","removeEventListener","encodeLocation","url","push","Push","historyState","pushState","error","DOMException","name","assign","replace","Replace","go","n","ResultType","Set","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","siblings","length","slice","every","i","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","undefined","caseSensitive","startsWith","joinPaths","concat","children","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","fromSegments","toSegments","shift","pop","routePathnameIndex","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","Symbol","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","cb","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","id","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","navigator","routePathnamesJson","UNSAFE_getPathContributingMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","Provider","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","props","super","this","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","findIndex","m","min","reduceRight","getChildren","Component","element","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Promise","treePath","type","apply","loader","hasErrorBoundary","shouldRevalidate","handle","lazy","Map","startTransitionImpl","ReactDOM","HashRouter","future","historyRef","querySelector","getAttribute","setStateImpl","v7_startTransition","setState","newState","isBrowser","createElement","ABSOLUTE_URL_REGEX","Link","_ref7","ref","absoluteHref","onClick","reloadDocument","target","preventScrollReset","unstable_viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","bind","arguments","source","prototype","hasOwnProperty","call","excluded","sourceKeys","keys","Split","dragging","warpper","paneNumber","startX","startY","move","boxWidth","boxHeight","preWidth","nextWidth","preHeight","nextHeight","preSize","nextSize","onDragEnd","onDragging","componentWillUnmount","removeEvent","onMouseDown","env","clientX","clientY","parentNode","prevTarget","previousElementSibling","nextTarget","nextElementSibling","clientWidth","clientHeight","mode","x","y","width","height","_this$props$visible","_this$props","prefixCls","className","visible","visiable","renderBar","lineBar","disable","other","cls","Boolean","trim","child","toArray","_jsx","node","visibleBar","barProps","BarCom","_jsxs","defaultProps","buttonTypes","own","createH","schema","defaultTagName","adjust","values","createAdjustMap","selector","properties","_len","Array","_key","unshift","previous","tagName","start","lastIndex","exec","subvalue","isArray","parseSelector","has","isProperties","addProperty","addChild","content","info","find","Number","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","parsePrimitive","property","String","finalResult","nodes","number","boolean","overloadedBoolean","normalize","h","html","svg","webNamespaces","mathml","xlink","xml","xmlns","proto","fromParse5","tree","settings","one","file","space","verbose","nodeName","reference","data","patch","quirksMode","all","childNodes","doc","loc","indices","toPoint","offset","line","column","toOffset","point","position","namespaceURI","attrs","attribute","prefix","pos","sourceCodeLocation","startTag","endTag","results","tail","opening","closing","startLine","startCol","startOffset","endLine","endCol","endOffset","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","code","_err","onParseError","_addGap","_processSurrogate","nextCp","charCodeAt","isSurrogatePair","$","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","TokenType","getTokenAttr","token","attrName","Uint16Array","c","decodeMap","fromCodePoint","_a","codePoint","output","fromCharCode","replaceCodePoint","get","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","parseInt","startIdx","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","text","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","doctype","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","parseFragment","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","ruleId","fatal","actual","expected","note","ext","TypeError","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","proc","cwd","isUrl","fileUrlOrPath","auth","urlToPath","hostname","third","getPathFromURLPosix","order","VFile","isUint8Array","messages","stored","prop","assertNonEmpty","assertPart","stem","fail","encoding","TextDecoder","decode","part","description","dashToCamelRe","formatCRe","formatXRe","fatalities","emptyOptions","fromHtml","onerror","p5doc","dashToCamel","camelcase","setting","config","level","format","$1","$2","visualizeCharacter","charCode","toUpperCase","$0","htmlVoidElements","zwitch","invalid","handlers","unknown","parameters","core","subset","groups","charactersToExpression","basic","escapeOnly","pair","character","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","characters","formatSmart","next","named","numeric","omit","toHexadecimal","omitOptionalSemicolons","useNamedReferences","useShortestReferences","characterEntitiesLegacy","toNamed","decimal","toDecimal","stringifyEntities","ccount","re","whitespace","thing","siblingAfter","siblingBefore","emptyChildren","increment","includeWhitespace","omission","body","caption","headOrColgroupOrCaption","colgroup","dd","dt","head","li","optgroup","option","rp","rubyElement","rt","tbody","td","cells","tfoot","th","thead","tr","seen","constants","unquoted","single","double","serializeAttribute","allowParseErrors","allowDangerousCharacters","quote","characterReferences","padLeft","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","node_","comment","_1","_2","bogusComments","_3","upperDoctype","tightDoctype","omitOptionalTags","closeEmptyElements","voids","parts","last","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","raw","allowDangerousHtml","root","emptyCharacterReferences","bail","isPlainObject","getPrototypeOf","toStringTag","iterator","trough","fns","pipeline","run","middlewareIndex","callback","_len2","_key2","middleware","called","wrapped","_len3","_key3","fnExpectsCallback","done","then","_len4","_key4","wrap","use","middelware","CallableInstance","func","setPrototypeOf","names","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","Processor","Compiler","attachers","compiler","freezeIndex","frozen","transformers","destination","attacher","extend","assertUnfrozen","freeze","self","transformer","POSITIVE_INFINITY","realFile","vfile","assertParser","process","assertCompiler","executor","resolve","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","add","plugin","plugins","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","rehype","emitParseErrors","options_","toHtml","stopPropagation","SelectionText","elm","selectionStart","selectionEnd","focus","setRangeText","getSelectedValue","getLineStartNumber","getIndentText","indent","old","lineStarInstert","oldStart","txt","lineStarRemove","newStart","notifyChange","Event","bubbles","cancelable","dispatchEvent","container","textAlign","boxSizing","overflow","textarea","top","left","resize","color","opacity","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","editor","margin","border","background","display","fontFamily","fontSize","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","tabSize","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap","outline","minHeight","placeholder","language","dataColorMode","rehypePlugins","onChange","setValue","useState","useEffect","textRef","useRef","useImperativeHandle","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","htmlStr","useMemo","processHtml","preView","styles","dangerouslySetInnerHTML","__html","textareaProps","autoComplete","autoCorrect","spellCheck","autoCapitalize","onKeyDown","evn","readOnly","api","nativeEvent","toLocaleLowerCase","val","shortcuts","convert","ok","check","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","o","r","registered","defaultLanguage","l","f","metastring","d","t","u","g","v","highlight","ignoreMissing","w","lines","N","cascadeRaw","cascade","preorder","childIndex","showLineNumbers","O","rehypePrism","reset","Editor","Tag","tag","borderColor","win","FrameContext","IFrame","forwardRef","initialContent","src","mountTarget","iframeLoaded","setIframeLoaded","mountNode","setMountNode","getDoc","contentDocument","getMountTarget","handleLoad","useCallback","clearInterval","setInterval","_mountNode$contentWin","contentWindow","_mountNode$contentWin2","reProps","srcDoc","onLoad","title","renderFrameContents","_getDoc","header","parentView","contents","createPortal","displayName","css","js","blob","Blob","createObjectURL","Run","setHtmlStr","cssStr","setCssStr","jsStr","setJsStr","query","URLSearchParams","handleChange","set","permanent","minWidth","CodeEditor","zIndex","flex","RunWeb","charSet","nameRe","nameReJsx","jsx","hastToReact","classId","dataType","itemId","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","typeOf","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlnsXLink","StyleToObject","pointEnd","pointStart","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","parentSchema","findComponentFromName","alignValue","createProperty","createElementProps","createChildren","addNode","addChildren","estree","expression","evaluateExpression","crashEstree","mdxExpression","attributes","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","styleObject","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","isIdentifierName","object","computed","optional","toDash","urlAttributes","cite","formAction","icon","manifest","ping","poster","includeImageAlt","includeHtml","alt","list","chunkStart","subtokenize","events","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","context","startPosition","startPositions","childEvents","gaps","stream","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","combineExtensions","extensions","syntaxExtension","extension","hook","right","constructs","existing","before","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","factorySpace","effects","limit","size","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","now","containerContinue","flow","flowContinue","writeToChild","eof","nok","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startBufferIndex","endBufferIndex","view","sliceChunks","chunkIndex","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","contentBefore","beforeContentChunk","contentChunk","characterReference","decodeNamedCharacterReference","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","decodeNumericCharacterReference","characterEscapeOrReference","hex","fromMarkdown","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","atHardBreak","inReference","referenceType","ancestor","decodeString","characterReferenceType","ordered","spread","checked","postprocess","defaultConstructs","atCarriageReturn","endPosition","ceil","preprocess","combined","remarkParse","globalThis","deserialize","serialized","deserializer","as","out","unpair","arr","Date","flags","BigInt","EMPTY","asString","shouldSkip","serialize","json","lossy","serializer","strict","valueOf","toJSON","toISOString","structuredClone","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","listItemLoose","tab","trimLines","trimLine","blockquote","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","ariaDescribedBy","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","disabled","table","rows","firstRow","tableContent","tableCell","tableRow","align","cellIndex","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","remarkRehype","async","hastTree","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","hasOwn","mdastTree","colon","questionMark","numberSign","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","input","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","subexit","safe","associationId","indentLines","containerFlow","blank","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","unsafe","checkQuote","checkEmphasis","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","sizes","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","singleTilde","strikethrough","EditMap","editMap","at","addImpl","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","currentSchema","knownMdxNames","parseOptions","documentMode","handleRaw","stitches","resetTokenizer","stitch","toParse5","Token","createParse5Location","clone","cloneWithoutChildren","fakeRoot","setPoint","extra","rehypeRaw","getParentElement","dom","dataset","classList","parentElement","useCopied","copyTextToClipboard","setTimeout","_container$current","_container$current2","_container$current3","disableCopy","onScroll","onMouseOver","pluginsFilter","wrapperElement","warpperElement","mdp","customProps","wrapperProps","ReactMarkdown","emptyMulticharIndex","emptyRegularIndex","extendIndex","currentIndex","isLast","charIndex","createMulticharIndex","_i","items_1","createRegularIndex","items_2","emptyPseudoSignatures","defaultPseudoSignature","calculatePseudoSignature","types","setResultType","types_1","ofSelector","calculatePseudoSignatures","definitions","pseudoClassesToArgumentTypes","obj","category","_c","inverseCategories","pseudoClass","argumentTypes","__assign","emptyXmlOptions","defaultXmlOptions","wildcard","withPositive","positive","merge","mergeSection","mergeSchema","replaceValueIfSpecified","concatArray","mergeDefinitions","baseValue","migration","extendSyntaxDefinition","withNoNegative","baseSyntax","ids","classNames","combinators","operators","caseSensitivityModifiers","unknownCaseSensitivityModifiers","pseudoClasses","pseudoElements","notation","NoArgument","css1SyntaxDefinition","css2SyntaxDefinition","selectors3SyntaxDefinition","Formula","Selector","selectors4SyntaxDefinition","FormulaOfSelector","cssSyntaxDefinitions","css1","css2","css3","latest","progressive","isIdentStart","isIdent","isHex","stringEscapeChars","whitespaceChars","quoteChars","digitsChars","errorPrefix","astMethods","generatorName","checkerName","entity","cssSelectorParse","syntax","substitutes","syntaxDefinition","param","tagNameEnabled","tagNameWildcardEnabled","idEnabled","classNamesEnabled","namespaceEnabled","namespaceWildcardEnabled","substitutesEnabled","combinatorsIndex","_d","attributesEnabled","attributesOperatorsIndex","attributesCaseSensitivityModifiers","attributesAcceptUnknownCaseSensitivityModifiers","attributesCaseSensitivityModifiersEnabled","_e","pseudoClassesEnabled","pseudoClassesDefinitions","pseudoClassesAcceptUnknown","_f","pseudoElementsEnabled","pseudoElementsSingleColonNotationEnabled","pseudoElementsDoubleColonNotationEnabled","pseudoElementsDefinitions","pseudoElementsAcceptUnknown","chr","comparison","isTagStart","rewind","newPos","readAndNext","errorMessage","assert","condition","assertNonEof","isEof","pass","matchMulticharIndex","matchMulticharIndexPos","subPos","subMatch","parseHex","parseString","esc","parseIdentifier","parsePseudoClassString","skipWhitespace","rules","parseRule","parseAttribute","name_1","name_2","savedPos","name_3","operator","name_4","caseSensitivityModifier","parseNumber","isNumberStart","parsePseudoArgument","pseudoName","signature","name_5","ident","firstNumber","firstNumberMultiplier","sign","parseFormula","parseTagName","name_6","parseTagNameWithNamespace","combinator","idName","isDoubleColon","pseudoElement","nestedRule","createParser","rtlRange","ltrRange","rtl","ltr","dirBidi","direction","dirProperty","dir","normalizeValue","emptyClassNames","tags","ranges","cast","rightIndex","leftIndex","extendedFilter","hasProperty","nthCheck","formula","parsed","boolbase","absA","abs","bMod","readSign","readNumber","fauxEsmNthCheck","pseudo","someChildren","enabled","assertDeep","elementIndex","typeIndex","childState","found","rootQuery","scopeElements","walk","elementCount","typeCount","getCachedNthCheck","readWrite","scope","query_","_cachedFn","editableOrEditingHost","nest","combine","currentRules","nestResult","adjacentSibling","descendant","directChild","generalSibling","currentDirection","dirInferred","xmlLang","contentEditable","enterState","rootRules","selectorIndex","applySelectors","fromParent","fromSibling","total","getCodeString","rewrite","selected","selectAll","nextChild","codeBlockParames","getCommentObject","getURLParameters","keyName","propertiesHandle","defaultAttrs","rehyp","firstChild","prevChild","reservedMeta","retrieveMeta","headingRank","slugs","occurrences","slug","maintainCase","originalSlug","convertElement","tagNameFactory","looksLikeAnElement","contentDefaults","toChildren","toNode","toProperties","openDelimiter","closeDelimiter","octiconLink","viewBox","version","ariaHidden","fillRule","defaultRehypePlugins","headingOroperties","headingProperties","behavior","method","grouping","tabIndex","rehypeIgnore","_props$disableCopy","rehypeRewrite","class","fill","rehypeAttrs","MarkdownPreview","GITHUB_CORNERS_TEMPLATE","innerHTML","GithubCorners","HTMLElement","observedAttributes","shadow","attachShadow","ownerDocument","importNode","update","setAttr","lastElementChild","setAttribute","firstElementChild","getAttributeNames","attributeChangedCallback","oldValue","newValue","customElements","define","githubCorners","fixed","bottom","bgColor","otherProps","styl","transform","Docs","maxWidth","GitHubCorners","marginRight","App","Home","getElementById","ReactDOMClient","el","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","removeChild","removeAllRanges","addRange","enumerable","_defineProperty","connectedCallback","hasAttribute","removeAttribute","localStorage","getItem","setItem","matchMedia","onchange","MutationObserver","documentElement","colorMode","colorScheme","observe","removeItem","textContent","onclick","CustomEvent","composed","detail","module","exports","trueFunc","falseFunc","toStr","gOPD","hasOwnConstructor","hasIsPrototypeOf","setProperty","configurable","writable","getProperty","copyIsArray","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","comments","decl","decls","declarations","parsePart","res","lhs","rhs","incr","k","C","sortIndex","performance","unstable_now","q","z","D","E","clearTimeout","F","setImmediate","G","startTime","expirationTime","H","J","K","L","M","priorityLevel","scheduling","isInputPending","Q","R","MessageChannel","T","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","inline_style_parser_1","__importDefault","require","default","hasIterator","toPropertyKey","__esModule","_typeof","hint","prim","toPrimitive","arg","tokens","padRight","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","additional","queue","following","characterReferenceCharacters","terminated","namedReference","diff","nonTerminated","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","DefinedInfo","mustUseProperty","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","autoFocus","autoPlay","blocking","capture","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemProp","itemRef","itemScope","itemType","loading","loop","low","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyPress","onKeyUp","onLanguageChange","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","playsInline","popover","popoverTarget","popoverTargetAction","preload","referrerPolicy","rel","reversed","rowSpan","sandbox","scoped","seamless","shadowRootDelegatesFocus","shadowRootMode","shape","slot","span","srcLang","srcSet","translate","typeMustMatch","useMap","aLink","archive","axis","bottomMargin","cellPadding","cellSpacing","charOff","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","floodColor","floodOpacity","fontSizeAdjust","fontStretch","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeOpacity","strokeWidth","textAnchor","textDecoration","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","orient","orientation","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","Type","Info","dashes","kebab","mark","powers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","leafPrototypes","getProto","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}