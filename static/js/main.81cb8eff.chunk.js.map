{"version":3,"sources":["pages/run/Tag.module.less","pages/run/index.module.less","pages/run/Tag.tsx","../../../src/index.tsx","pages/run/Textarea.tsx","pages/run/index.tsx","pages/docs/index.tsx","../README.md","App.tsx","index.tsx","pages/run/Textarea.module.less"],"names":["module","exports","Tag","props","color","className","styles","tag","style","borderColor","backgroundColor","opacity","children","html","css","js","title","other","srcDoc","useMemo","jsString","cssString","width","height","border","ref","Textarea","text","sHtml","language","value","textRef","useRef","viewRef","useEffect","current","onscroll","evn","scrollTop","target","position","margin","autoComplete","autoCorrect","spellCheck","autoCapitalize","textarea","codePreview","dangerouslySetInnerHTML","__html","String","replace","c","rehype","data","fragment","use","rehypePrism","ignoreMissing","processSync","toString","Run","useState","htmlStr","setHtmlStr","cssStr","setCssStr","jsStr","setJsStr","query","URLSearchParams","useLocation","search","get","minHeight","header","menu","href","to","lineBar","mode","minWidth","editor","onPaste","event","paste","clipboardData","window","getData","preventDefault","onChange","zIndex","onPasteCapture","flex","Docs","maxWidth","paddingTop","paddingBottom","source","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81cb8eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"Tag_tag__2crL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"index_header__3jKl4\",\"menu\":\"index_menu__7Iclo\",\"editor\":\"index_editor__1EVaF\"};","import styles from './Tag.module.less';\n\nexport interface TagProps extends React.HTMLAttributes<HTMLDivElement> {\n  color?: string;\n}\n\nexport default function Tag(props: TagProps) {\n  const { color } = props;\n  return (\n    <div className={styles.tag} style={{ color: '#fff', borderColor: color, backgroundColor: color, opacity: 0.9 }}>\n      {props.children}\n    </div>\n  );\n}\n","import React, { useMemo } from 'react';\n\nexport interface RunWebProps extends React.IframeHTMLAttributes<HTMLIFrameElement> {\n  css?: string;\n  js?: string;\n  html?: string;\n  title?: string;\n}\n\nexport default React.forwardRef<HTMLIFrameElement, RunWebProps>((props, ref) => {\n  const { html = '', css, js, title = 'Demo Title', ...other } = props;\n\n  const srcDoc = useMemo(() => {\n    const jsString = js ? `<script type=\"text/javascript\">${js}</script>` : '';\n    const cssString = css ? `<style>${css}</style>` : '';\n    return `<!DOCTYPE html><html><head>${cssString}</head><body>${html}</body>${jsString}</html>`;\n  }, [css, html, js]);\n\n  return <iframe title={title} width=\"100%\" height=\"100%\" style={{ border: 0 }} {...other} ref={ref} srcDoc={srcDoc} />;\n});\n","// @ts-ignore\nimport rehype from 'rehype';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\nimport styles from './Textarea.module.less';\nimport { useEffect, useRef } from 'react';\n\n// function htmlEncode(html: string) {\n//   const temp = document.createElement ('div');\n//   (temp.textContent !== undefined) ? (temp.textContent = html) : (temp.innerText = html);\n//   const output = temp.innerHTML;\n//   return output;\n// }\n\nfunction htmlEncode(sHtml: string) {\n  return sHtml.replace(\n    /[<>&\"]/g,\n    (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  );\n}\n\nconst processHtml = (html: string) => {\n  return rehype()\n    .data('settings', { fragment: true })\n    .use(rehypePrism, { ignoreMissing: true })\n    .processSync(`${html}`)\n    .toString();\n};\nconst resultString = (text: string) =>\n  text.replace(/<code\\sclass=\"language-(html|css|js)\">/, '').replace(/<\\/code>/, '');\n\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  text?: string;\n  language?: 'html' | 'js' | 'css';\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const { language, value = '' } = props;\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  const viewRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    textRef.current!.onscroll = (evn) => {\n      if (viewRef.current) {\n        viewRef.current.scrollTop = (evn.target as Element).scrollTop;\n      }\n    };\n  }, []);\n  return (\n    <div style={{ position: 'relative', margin: 3, width: '100%' }}>\n      <textarea\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        autoCapitalize=\"off\"\n        className={styles.textarea}\n        ref={textRef}\n        {...props}\n        value={value}\n      />\n      <div\n        ref={viewRef}\n        className={`${styles.codePreview} language-${language}`}\n        dangerouslySetInnerHTML={{\n          __html: resultString(\n            processHtml(\n              `<pre aria-hidden=true><code class=\"language-${language}\">${htmlEncode(\n                String(value || ''),\n              )}</code></pre><br />`,\n            ),\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Textarea;\n","import { useEffect, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Split from '@uiw/react-split';\nimport Tag from './Tag';\nimport RunWeb from '../../../';\nimport TextareaEditor from './Textarea';\nimport styles from './index.module.less';\nimport './language.less';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function Run() {\n  const [htmlStr, setHtmlStr] = useState('');\n  const [cssStr, setCssStr] = useState('');\n  const [jsStr, setJsStr] = useState('');\n  let query = useQuery();\n\n  useEffect(() => {\n    const html = query.get('html');\n    const css = query.get('css');\n    const js = query.get('js');\n    if (html) {\n      setHtmlStr(html);\n    }\n    if (css) {\n      setCssStr(css);\n    }\n    if (js) {\n      setJsStr(js);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div style={{ minHeight: '100vh' }}>\n      <div className={styles.header}>\n        Run Web\n        <div className={styles.menu}>\n          <a href=\"https://github.com/uiwjs/react-run-web\" target=\"__blank\">\n            Github\n          </a>\n          <Link to=\"/docs\">Docs</Link>\n        </div>\n      </div>\n      <Split style={{ width: '100%', height: 'calc(100vh - 39px)' }}>\n        <Split lineBar mode=\"vertical\" style={{ minWidth: 120, width: '43%' }}>\n          <div style={{ height: '40%' }} className={styles.editor}>\n            <Tag color=\"#f44336\">HTML</Tag>\n            <TextareaEditor\n              value={htmlStr}\n              language=\"html\"\n              onPaste={(event) => {\n                let paste = (event.clipboardData || (window as any).clipboardData).getData('text');\n                setHtmlStr(paste.replace(/^\\n+/g, '').replace(/\\n+$/g, ''));\n                event.preventDefault();\n              }}\n              onChange={(evn) => setHtmlStr(evn.target.value)}\n            />\n          </div>\n          <div\n            style={{\n              height: '30%',\n              zIndex: 2,\n            }}\n            className={styles.editor}\n          >\n            <Tag color=\"#f7ac09\">JS</Tag>\n            <TextareaEditor\n              value={jsStr}\n              language=\"js\"\n              onPaste={(event) => {\n                let paste = (event.clipboardData || (window as any).clipboardData).getData('text');\n                setJsStr(paste.replace(/^\\n+/g, '').replace(/\\n+$/g, ''));\n                event.preventDefault();\n              }}\n              onChange={(evn) => setJsStr(evn.target.value)}\n            />\n          </div>\n          <div\n            style={{\n              height: '30%',\n              zIndex: 3,\n            }}\n            className={styles.editor}\n          >\n            <Tag color=\"#004fd4\">CSS</Tag>\n            <TextareaEditor\n              value={cssStr}\n              language=\"css\"\n              onPasteCapture={(event) => {\n                let paste = (event.clipboardData || (window as any).clipboardData).getData('text');\n                paste = paste.replace(/^\\n+/g, '').replace(/\\n+$/g, '');\n                setCssStr(paste);\n                event.preventDefault();\n              }}\n              onChange={(evn) => setCssStr(evn.target.value)}\n            />\n          </div>\n        </Split>\n        <div style={{ minWidth: 120, flex: 1 }}>\n          <RunWeb css={cssStr} js={jsStr} html={htmlStr} />\n        </div>\n      </Split>\n    </div>\n  );\n}\n","import MarkdownPreview from '@uiw/react-markdown-preview';\nimport MDStr from '../../../README.md';\n\nexport default function Docs() {\n  return (\n    <div style={{ margin: '0 auto', maxWidth: 650, paddingTop: 50, paddingBottom: 60 }}>\n      <MarkdownPreview source={MDStr} />\n    </div>\n  );\n}\n","export default \"Run Web\\n===\\n\\n[![Build & Deploy](https://github.com/uiwjs/react-run-web/actions/workflows/ci.yml/badge.svg)](https://github.com/uiwjs/react-run-web/actions/workflows/ci.yml) [![Coverage Status](https://coveralls.io/repos/github/uiwjs/react-run-web/badge.svg?branch=main)](https://coveralls.io/github/uiwjs/react-run-web?branch=main) [![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-run-web/file/README.md) [![npm bundle size](https://img.shields.io/bundlephobia/minzip/@uiw/react-run-web)](https://www.npmjs.com/package/@uiw/react-run-web) [![npm version](https://img.shields.io/npm/v/@uiw/react-run-web.svg)](https://www.npmjs.com/package/@uiw/react-run-web)\\n\\nOnline Code Editor for Rapid Web Development, [Preview Demo](https://uiwjs.github.io/react-run-web#/?html=<div>Hello%20World</div>&js=console.log('hello%20world')&css=div%20{%20color:%20red;}).\\n\\n## Install\\n\\n```bash\\nnpm install @uiw/react-run-web\\n```\\n\\n## Usage\\n\\n```jsx\\nimport RunWeb from '@uiw/react-run-web';\\n\\n<RunWeb\\n  css=\\\"div {color:red;}\\\"\\n  js=\\\"console.log('hello world!')\\\"\\n  html=\\\"<div>hello world!</div>\\\"\\n/>\\n```\\n\\n## Props\\n\\n```ts\\ninterface RunWebProps extends React.IframeHTMLAttributes<HTMLIFrameElement> {\\n  css?: string;\\n  js?: string;\\n  html?: string;\\n  title?: string;\\n}\\n```\\n\\n## Online Code Preview\\n\\n[Preview Demo Example](https://uiwjs.github.io/react-run-web#/?html=<div>Hello%20World</div>&js=console.log('hello%20world')&css=div%20{%20color:%20red;}).\\n\\n```url\\nhttps://uiwjs.github.io/react-run-web#/?html=...&js=...&css=...\\n```\\n\\n## Development\\n\\nRuns the project in development mode.  \\n\\n```bash\\n# Step 1, run first, listen to the component compile and output the .js file\\n# listen for compilation output type .d.ts file\\nnpm run watch\\n# Step 2, development mode, listen to compile preview website instance\\nnpm run start\\n```\\n\\n**`production`**\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\";","import React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport Home from './pages/run';\nimport Docs from './pages/docs';\nimport './App.less';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/docs\">\n            <Docs />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Textarea_textarea__24tfU\",\"codePreview\":\"Textarea_codePreview__2FT76\"};"],"sourceRoot":""}